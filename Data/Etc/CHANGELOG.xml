<?xml version="1.0" encoding="utf-8"?>

<!--
Informations             :
    - repository path    : /Users/hywan/Development/Hoa/Svn/Repository ;
    - path in repository : /Framework/Trunk/ ;
    - generated at       : 2009-04-22T16:54:10.000000Z.
-->

<log>
  <logentry revision="324">
    <author>hywan</author>
    <date>2009-04-22T16:53:16.763691Z</date>
    <msg>Add the “check” flag.</msg>
    <paths>
      <path action="M">Data/Bin/Command/Main/Root.php</path>
    </paths>
  </logentry>
  <logentry revision="323">
    <author>hywan</author>
    <date>2009-04-22T16:36:31.904693Z</date>
    <msg>Link the connection layer with the new IO stream interface.</msg>
    <paths>
      <path action="M">Framework/Socket/Connection.php</path>
      <path action="M">Framework/Socket/Connection/Client.php</path>
      <path action="M">Framework/Socket/Connection/Exception.php</path>
      <path action="M">Framework/Socket/Connection/Server.php</path>
    </paths>
  </logentry>
  <logentry revision="322">
    <author>hywan</author>
    <date>2009-04-22T16:35:14.482430Z</date>
    <msg>Correct a “parser error”, i.e. PHP does not support “const native function” …</msg>
    <paths>
      <path action="M">Framework/Socket/Transport.php</path>
    </paths>
  </logentry>
  <logentry revision="321">
    <author>hywan</author>
    <date>2009-04-22T16:34:35.218583Z</date>
    <msg>Fix some bugs, parse errors, make corrections according to previous revisions etc.</msg>
    <paths>
      <path action="M">Framework/Socket/Internet.php</path>
    </paths>
  </logentry>
  <logentry revision="320">
    <author>hywan</author>
    <date>2009-04-22T16:33:12.328369Z</date>
    <msg>Edit the API documentation.</msg>
    <paths>
      <path action="M">Framework/Stream/Stream.php</path>
    </paths>
  </logentry>
  <logentry revision="319">
    <author>hywan</author>
    <date>2009-04-22T16:32:34.999547Z</date>
    <msg>Tidy up some methods (it was a draft as well …).</msg>
    <paths>
      <path action="M">Framework/Stream/Io.php</path>
    </paths>
  </logentry>
  <logentry revision="318">
    <author>hywan</author>
    <date>2009-04-22T13:55:56.890856Z</date>
    <msg>Move the super-connection (abstract class).</msg>
    <paths>
      <path action="A">Framework/Socket/Connection.php</path>
      <path action="D">Framework/Socket/Connection/Connection.php</path>
    </paths>
  </logentry>
  <logentry revision="317">
    <author>hywan</author>
    <date>2009-04-22T13:53:53.658115Z</date>
    <msg>Again …</msg>
    <paths>
      <path action="A">Framework/Socket/Interface.php</path>
    </paths>
  </logentry>
  <logentry revision="316">
    <author>hywan</author>
    <date>2009-04-22T13:53:39.945350Z</date>
    <msg>So, here we go.</msg>
    <paths>
      <path action="D">Framework/Socket/Socket.php</path>
    </paths>
  </logentry>
  <logentry revision="315">
    <author>hywan</author>
    <date>2009-04-22T13:52:56.090904Z</date>
    <msg>Transform the entry package class into an interface.</msg>
    <paths>
      <path action="M">Framework/Socket/Socket.php</path>
    </paths>
  </logentry>
  <logentry revision="312">
    <author>hywan</author>
    <date>2009-04-18T19:07:56.458785Z</date>
    <msg>If we want to flush, it must be on a Hoa_Stream_Io stream at least.</msg>
    <paths>
      <path action="M">Framework/Stream/Io/Bufferable.php</path>
    </paths>
  </logentry>
  <logentry revision="311">
    <author>hywan</author>
    <date>2009-04-18T18:53:51.253468Z</date>
    <msg>Add the IO interfaces.</msg>
    <paths>
      <path action="A">Framework/Stream/Io</path>
      <path action="A">Framework/Stream/Io.php</path>
      <path action="A">Framework/Stream/Io/Bufferable.php</path>
      <path action="A">Framework/Stream/Io/Lockable.php</path>
      <path action="A">Framework/Stream/Io/Pointable.php</path>
      <path action="A">Framework/Stream/Io/Statable.php</path>
      <path action="A">Framework/Stream/Io/Touchable.php</path>
    </paths>
  </logentry>
  <logentry revision="310">
    <author>hywan</author>
    <date>2009-04-18T16:56:34.361195Z</date>
    <msg>Update the Hoa_Socket package.</msg>
    <paths>
      <path action="M">Framework/Socket/Exception.php</path>
      <path action="M">Framework/Socket/Internet.php</path>
      <path action="M">Framework/Socket/Internet/DomainName.php</path>
      <path action="M">Framework/Socket/Internet/Ipv4.php</path>
      <path action="M">Framework/Socket/Internet/Ipv6.php</path>
      <path action="M">Framework/Socket/Socket.php</path>
      <path action="M">Framework/Socket/Transport.php</path>
    </paths>
  </logentry>
  <logentry revision="309">
    <author>hywan</author>
    <date>2009-04-18T16:56:15.674074Z</date>
    <msg>Write the stream register.</msg>
    <paths>
      <path action="M">Framework/Stream/Stream.php</path>
    </paths>
  </logentry>
  <logentry revision="308">
    <author>hywan</author>
    <date>2009-04-18T16:56:02.203862Z</date>
    <msg>Update the Hoa_Stream package.</msg>
    <paths>
      <path action="M">Framework/Stream/Bucket.php</path>
      <path action="M">Framework/Stream/Context.php</path>
      <path action="M">Framework/Stream/Filter.php</path>
      <path action="M">Framework/Stream/Filter/Default.php</path>
      <path action="M">Framework/Stream/Notification/Interface.php</path>
      <path action="M">Framework/Stream/Wrapper.php</path>
      <path action="M">Framework/Stream/Wrapper/Interface.php</path>
    </paths>
  </logentry>
  <logentry revision="307">
    <author>hywan</author>
    <date>2009-04-18T15:26:07.155470Z</date>
    <msg>Reorganize the stream, socket and file packages.</msg>
    <paths>
      <path action="D">Framework/Stream/Connection</path>
    </paths>
  </logentry>
  <logentry revision="306">
    <author>hywan</author>
    <date>2009-04-18T15:24:03.652519Z</date>
    <msg>Reorganize the stream, socket and file packages.</msg>
    <paths>
      <path action="D">Framework/Stream/Connection/Client.php</path>
      <path action="D">Framework/Stream/Connection/Connection.php</path>
      <path action="D">Framework/Stream/Connection/Exception.php</path>
      <path action="D">Framework/Stream/Connection/Server.php</path>
    </paths>
  </logentry>
  <logentry revision="305">
    <author>hywan</author>
    <date>2009-04-18T15:23:10.808453Z</date>
    <msg>Reorganize the stream, socket and file packages.</msg>
    <paths>
      <path action="A">Framework/Socket/Connection</path>
      <path action="R">Framework/Socket/Connection/Client.php</path>
      <path action="A">Framework/Socket/Connection/Connection.php</path>
      <path action="R">Framework/Socket/Connection/Server.php</path>
    </paths>
  </logentry>
  <logentry revision="304">
    <author>hywan</author>
    <date>2009-04-18T15:21:25.381331Z</date>
    <msg>Reorganize the stream, socket and file packages.</msg>
    <paths>
      <path action="D">Framework/Stream/Bucket</path>
      <path action="D">Framework/Stream/Context</path>
      <path action="D">Framework/Stream/Socket</path>
    </paths>
  </logentry>
  <logentry revision="303">
    <author>hywan</author>
    <date>2009-04-18T15:18:43.569365Z</date>
    <msg>Reorganize the stream, socket and file packages.</msg>
    <paths>
      <path action="D">Framework/Stream/Bucket/Brigade.php</path>
      <path action="D">Framework/Stream/Bucket/Exception.php</path>
      <path action="D">Framework/Stream/Context/Context.php</path>
      <path action="D">Framework/Stream/Context/Exception.php</path>
      <path action="D">Framework/Stream/Filter/Filter.php</path>
      <path action="D">Framework/Stream/Notification/Notification.php</path>
      <path action="D">Framework/Stream/Socket/Exception.php</path>
      <path action="D">Framework/Stream/Socket/Internet</path>
      <path action="D">Framework/Stream/Socket/Internet.php</path>
      <path action="D">Framework/Stream/Socket/Socket.php</path>
      <path action="D">Framework/Stream/Socket/Transport.php</path>
      <path action="D">Framework/Stream/Socket/Unix.php</path>
      <path action="D">Framework/Stream/Wrapper/Wrapper.php</path>
    </paths>
  </logentry>
  <logentry revision="302">
    <author>hywan</author>
    <date>2009-04-18T15:16:38.391258Z</date>
    <msg>Reorganize the stream, socket and file packages.</msg>
    <paths>
      <path action="A">Framework/Socket</path>
      <path action="A">Framework/Socket/Exception.php</path>
      <path action="A">Framework/Socket/Internet</path>
      <path action="A">Framework/Socket/Internet.php</path>
      <path action="A">Framework/Socket/Socket.php</path>
      <path action="A">Framework/Socket/Transport.php</path>
      <path action="A">Framework/Socket/Unix.php</path>
    </paths>
  </logentry>
  <logentry revision="301">
    <author>hywan</author>
    <date>2009-04-18T15:15:30.296669Z</date>
    <msg>Reorganize the stream, socket and file packages.</msg>
    <paths>
      <path action="A">Framework/Stream/Bucket.php</path>
      <path action="A">Framework/Stream/Context.php</path>
      <path action="A">Framework/Stream/Filter.php</path>
      <path action="A">Framework/Stream/Notification.php</path>
      <path action="A">Framework/Stream/Wrapper.php</path>
    </paths>
  </logentry>
  <logentry revision="300">
    <author>hywan</author>
    <date>2009-04-18T15:10:05.298516Z</date>
    <msg>Reorganize the stream, socket and file packages.</msg>
    <paths>
      <path action="D">Framework/Socket</path>
    </paths>
  </logentry>
  <logentry revision="299">
    <author>hywan</author>
    <date>2009-04-18T12:23:35.825124Z</date>
    <msg>Correct an API typo.</msg>
    <paths>
      <path action="M">Framework/Controller/Dispatcher/Action.php</path>
    </paths>
  </logentry>
  <logentry revision="298">
    <author>hywan</author>
    <date>2009-04-17T09:54:01.460873Z</date>
    <msg>Oops, bad exception inheritance …, and correct API documentation.</msg>
    <paths>
      <path action="M">Framework/Session/Exception/NamespaceIsExpired.php</path>
      <path action="M">Framework/Session/Exception/SessionIsExpired.php</path>
    </paths>
  </logentry>
  <logentry revision="297">
    <author>hywan</author>
    <date>2009-04-16T19:43:49.060341Z</date>
    <msg>Oops, a parse error …</msg>
    <paths>
      <path action="M">Framework/Stream/Stream.php</path>
    </paths>
  </logentry>
  <logentry revision="296">
    <author>hywan</author>
    <date>2009-04-16T18:57:53.476231Z</date>
    <msg>Deal with the sockets transports and server's flags, and correct two typos in exception messages (bad copy/paste …).</msg>
    <paths>
      <path action="M">Framework/Stream/Connection/Server.php</path>
    </paths>
  </logentry>
  <logentry revision="295">
    <author>hywan</author>
    <date>2009-04-16T18:56:25.007417Z</date>
    <msg>Add the getTransport() method in the interface. Usefull for the future.</msg>
    <paths>
      <path action="M">Framework/Stream/Socket/Socket.php</path>
    </paths>
  </logentry>
  <logentry revision="294">
    <author>hywan</author>
    <date>2009-04-14T19:56:39.216896Z</date>
    <msg>First step for the client and server classes.</msg>
    <paths>
      <path action="M">Framework/Stream/Connection/Client.php</path>
      <path action="A">Framework/Stream/Connection/Connection.php</path>
      <path action="M">Framework/Stream/Connection/Server.php</path>
    </paths>
  </logentry>
  <logentry revision="293">
    <author>hywan</author>
    <date>2009-04-14T19:56:20.404107Z</date>
    <msg>Create a simple stream wrapper.</msg>
    <paths>
      <path action="A">Framework/Stream/Stream.php</path>
    </paths>
  </logentry>
  <logentry revision="292">
    <author>hywan</author>
    <date>2009-04-14T19:55:59.784996Z</date>
    <msg>Add the Hoa_Stream_Socket interface (usefull for the future) and adapt the Hoa_Stream_Socket_Internet class in consequence.</msg>
    <paths>
      <path action="M">Framework/Stream/Socket/Internet.php</path>
      <path action="A">Framework/Stream/Socket/Socket.php</path>
    </paths>
  </logentry>
  <logentry revision="291">
    <author>hywan</author>
    <date>2009-04-13T19:30:02.841215Z</date>
    <msg>Optimize the eob() method.</msg>
    <paths>
      <path action="M">Framework/Stream/Bucket/Brigade.php</path>
    </paths>
  </logentry>
  <logentry revision="290">
    <author>hywan</author>
    <date>2009-04-13T19:29:30.999306Z</date>
    <msg>First step for the Socket sub-package.</msg>
    <paths>
      <path action="A">Framework/Stream/Socket/Exception.php</path>
      <path action="A">Framework/Stream/Socket/Internet</path>
      <path action="A">Framework/Stream/Socket/Internet.php</path>
      <path action="A">Framework/Stream/Socket/Internet/DomainName.php</path>
      <path action="A">Framework/Stream/Socket/Internet/Ipv4.php</path>
      <path action="A">Framework/Stream/Socket/Internet/Ipv6.php</path>
      <path action="A">Framework/Stream/Socket/Transport.php</path>
      <path action="A">Framework/Stream/Socket/Unix.php</path>
    </paths>
  </logentry>
  <logentry revision="289">
    <author>hywan</author>
    <date>2009-04-13T19:28:52.090603Z</date>
    <msg>Prepare the connection sub-package.</msg>
    <paths>
      <path action="A">Framework/Stream/Connection</path>
      <path action="A">Framework/Stream/Connection/Client.php</path>
      <path action="A">Framework/Stream/Connection/Exception.php</path>
      <path action="A">Framework/Stream/Connection/Server.php</path>
    </paths>
  </logentry>
  <logentry revision="288">
    <author>hywan</author>
    <date>2009-04-13T18:58:25.228398Z</date>
    <msg>Dude, what's this …?</msg>
    <paths>
      <path action="D">Framework/Uri/@todo.txt</path>
    </paths>
  </logentry>
  <logentry revision="287">
    <author>hywan</author>
    <date>2009-04-13T14:17:14.489650Z</date>
    <msg>Optimize the code whether a service is an observable and an observer at the same time.</msg>
    <paths>
      <path action="M">Framework/Observer/Observer.php</path>
    </paths>
  </logentry>
  <logentry revision="285">
    <author>hywan</author>
    <date>2009-04-13T12:21:03.558921Z</date>
    <msg>Review the code according to the previous revision, and optimize the unregister() method.</msg>
    <paths>
      <path action="M">Framework/Observer/Observer.php</path>
    </paths>
  </logentry>
  <logentry revision="284">
    <author>hywan</author>
    <date>2009-04-13T12:19:13.698219Z</date>
    <msg>Change the method name : updateFromObservable to receiveNotification, and add a first $index argument.
</msg>
    <paths>
      <path action="M">Framework/Observer/Interface/Observer.php</path>
    </paths>
  </logentry>
  <logentry revision="283">
    <author>hywan</author>
    <date>2009-04-13T12:17:32.247664Z</date>
    <msg>Remove the notifyObserver() method. This interface should only type a class.</msg>
    <paths>
      <path action="M">Framework/Observer/Interface/Observable.php</path>
    </paths>
  </logentry>
  <logentry revision="282">
    <author>hywan</author>
    <date>2009-04-12T19:15:00.775410Z</date>
    <msg>Switch the first and the second parameter of register() method, it is more explicit. And remake all the unregister() method body, better and more powerfull behavior.
</msg>
    <paths>
      <path action="M">Framework/Observer/Observer.php</path>
    </paths>
  </logentry>
  <logentry revision="278">
    <author>hywan</author>
    <date>2009-04-09T14:27:40.288127Z</date>
    <msg>Add the Hoa_Observer package.</msg>
    <paths>
      <path action="A">Framework/Observer</path>
      <path action="A">Framework/Observer/Exception.php</path>
      <path action="A">Framework/Observer/Interface</path>
      <path action="A">Framework/Observer/Interface/Observable.php</path>
      <path action="A">Framework/Observer/Interface/Observer.php</path>
      <path action="A">Framework/Observer/Observer.php</path>
    </paths>
  </logentry>
  <logentry revision="277">
    <author>hywan</author>
    <date>2009-04-05T23:18:08.079907Z</date>
    <msg>Oops, bad method call (bad yank/paste I mean :-p) …
</msg>
    <paths>
      <path action="M">Framework/Stream/Notification/Notification.php</path>
    </paths>
  </logentry>
  <logentry revision="276">
    <author>hywan</author>
    <date>2009-04-05T23:11:52.251531Z</date>
    <msg>Correct an API documentation typo and add two empty return instructions.
</msg>
    <paths>
      <path action="M">Framework/Controller/Plugin/Standard.php</path>
    </paths>
  </logentry>
  <logentry revision="275">
    <author>hywan</author>
    <date>2009-04-05T23:11:04.089968Z</date>
    <msg>Add the notification layer.
</msg>
    <paths>
      <path action="A">Framework/Stream/Notification</path>
      <path action="A">Framework/Stream/Notification/Exception.php</path>
      <path action="A">Framework/Stream/Notification/Interface.php</path>
      <path action="A">Framework/Stream/Notification/Notification.php</path>
    </paths>
  </logentry>
  <logentry revision="274">
    <author>hywan</author>
    <date>2009-04-05T23:10:51.042634Z</date>
    <msg>Add the context layer.
</msg>
    <paths>
      <path action="A">Framework/Stream/Context/Context.php</path>
      <path action="A">Framework/Stream/Context/Exception.php</path>
    </paths>
  </logentry>
  <logentry revision="273">
    <author>hywan</author>
    <date>2009-04-05T23:08:50.417247Z</date>
    <msg>Correct an API documentation typo.
</msg>
    <paths>
      <path action="M">Framework/Stream/Filter/Filter.php</path>
      <path action="M">Framework/Stream/Wrapper/Wrapper.php</path>
    </paths>
  </logentry>
  <logentry revision="272">
    <author>hywan</author>
    <date>2009-04-05T18:59:20.819872Z</date>
    <msg>Add an attempt to find the number of columns and rows of term on Unix platform (because all Unix don't export the $COLUMNS and $LINES variables). Use the stty command.
</msg>
    <paths>
      <path action="M">Framework/Console/Environment/Window.php</path>
    </paths>
  </logentry>
  <logentry revision="271">
    <author>hywan</author>
    <date>2009-04-05T18:53:48.823831Z</date>
    <msg>Correct a bug with TTY term' style. One bug stays but I don't know how to fix it …</msg>
    <paths>
      <path action="M">Framework/Console/Interface/Text.php</path>
    </paths>
  </logentry>
  <logentry revision="270">
    <author>hywan</author>
    <date>2009-04-05T18:52:30.079154Z</date>
    <msg>If an empty string is given as an option, it returns the text.</msg>
    <paths>
      <path action="M">Framework/Console/Interface/Style.php</path>
    </paths>
  </logentry>
  <logentry revision="269">
    <author>hywan</author>
    <date>2009-04-05T16:00:57.317042Z</date>
    <msg>Oops, forgot to change the usage short description …</msg>
    <paths>
      <path action="M">Data/Bin/Command/Main/Root.php</path>
    </paths>
  </logentry>
  <logentry revision="268">
    <author>hywan</author>
    <date>2009-04-05T15:58:33.715034Z</date>
    <msg>Add the root command.</msg>
    <paths>
      <path action="A">Data/Bin/Command/Main/Root.php</path>
      <path action="M">Data/Bin/Command/Main/Welcome.php</path>
    </paths>
  </logentry>
  <logentry revision="267">
    <author>hywan</author>
    <date>2009-04-04T20:28:19.328608Z</date>
    <msg>Change a != to !==. It should be a strict comparison here.</msg>
    <paths>
      <path action="M">Framework/Stream/Filter/Default.php</path>
    </paths>
  </logentry>
  <logentry revision="266">
    <author>hywan</author>
    <date>2009-04-04T20:25:29.058000Z</date>
    <msg>Correct a code typo.</msg>
    <paths>
      <path action="M">Framework/Stream/Wrapper/Wrapper.php</path>
    </paths>
  </logentry>
  <logentry revision="265">
    <author>hywan</author>
    <date>2009-04-04T20:18:56.009480Z</date>
    <msg>Write the wrapper layer.</msg>
    <paths>
      <path action="A">Framework/Stream/Wrapper/Exception.php</path>
      <path action="A">Framework/Stream/Wrapper/Interface</path>
      <path action="A">Framework/Stream/Wrapper/Interface.php</path>
      <path action="A">Framework/Stream/Wrapper/Interface/File.php</path>
      <path action="A">Framework/Stream/Wrapper/Interface/Stream.php</path>
      <path action="A">Framework/Stream/Wrapper/Wrapper.php</path>
    </paths>
  </logentry>
  <logentry revision="264">
    <author>hywan</author>
    <date>2009-04-04T18:50:33.783328Z</date>
    <msg>Correct some API typos.</msg>
    <paths>
      <path action="M">Framework/Stream/Bucket/Brigade.php</path>
    </paths>
  </logentry>
  <logentry revision="263">
    <author>hywan</author>
    <date>2009-04-04T18:48:38.570539Z</date>
    <msg>First step for Hoa_Stream.</msg>
    <paths>
      <path action="A">Framework/Stream</path>
      <path action="A">Framework/Stream/Bucket</path>
      <path action="A">Framework/Stream/Bucket/Brigade.php</path>
      <path action="A">Framework/Stream/Bucket/Exception.php</path>
      <path action="A">Framework/Stream/Context</path>
      <path action="A">Framework/Stream/Exception.php</path>
      <path action="A">Framework/Stream/Filter</path>
      <path action="A">Framework/Stream/Filter/Default.php</path>
      <path action="A">Framework/Stream/Filter/Exception.php</path>
      <path action="A">Framework/Stream/Filter/Filter.php</path>
      <path action="A">Framework/Stream/Socket</path>
      <path action="A">Framework/Stream/Wrapper</path>
    </paths>
  </logentry>
  <logentry revision="255">
    <author>hywan</author>
    <date>2009-03-10T12:23:28.917625Z</date>
    <msg>Adapt string to super string.</msg>
    <paths>
      <path action="M">Framework/Test/Urg/Type/String.php</path>
      <path action="M">Framework/Test/Urg/Type/StringWith.php</path>
    </paths>
  </logentry>
  <logentry revision="254">
    <author>hywan</author>
    <date>2009-03-10T12:23:07.479352Z</date>
    <msg>Add the super string.</msg>
    <paths>
      <path action="A">Framework/Test/Urg/Type/SuperString.php</path>
    </paths>
  </logentry>
  <logentry revision="253">
    <author>hywan</author>
    <date>2009-03-05T16:27:40.959457Z</date>
    <msg>Add the Maxtry exception and correct some bugs.</msg>
    <paths>
      <path action="M">Framework/Test/Urg/Type/Array.php</path>
      <path action="M">Framework/Test/Urg/Type/Boolean.php</path>
      <path action="M">Framework/Test/Urg/Type/BoundInteger.php</path>
      <path action="M">Framework/Test/Urg/Type/EvenInteger.php</path>
      <path action="M">Framework/Test/Urg/Type/Float.php</path>
      <path action="M">Framework/Test/Urg/Type/Integer.php</path>
      <path action="M">Framework/Test/Urg/Type/Integerpp.php</path>
      <path action="M">Framework/Test/Urg/Type/OddInteger.php</path>
      <path action="M">Framework/Test/Urg/Type/String.php</path>
      <path action="M">Framework/Test/Urg/Type/StringWith.php</path>
      <path action="M">Framework/Test/Urg/Type/Xn.php</path>
    </paths>
  </logentry>
  <logentry revision="252">
    <author>hywan</author>
    <date>2009-03-05T16:27:21.943773Z</date>
    <msg>Add the Maxtry exception.</msg>
    <paths>
      <path action="A">Framework/Test/Urg/Type/Exception</path>
      <path action="A">Framework/Test/Urg/Type/Exception/Maxtry.php</path>
    </paths>
  </logentry>
  <logentry revision="251">
    <author>hywan</author>
    <date>2009-03-04T22:28:25.498832Z</date>
    <msg>Correct some bugs.</msg>
    <paths>
      <path action="M">Framework/Test/Urg/Type/BoundFloat.php</path>
      <path action="M">Framework/Test/Urg/Type/BoundInteger.php</path>
      <path action="M">Framework/Test/Urg/Type/Integerpp.php</path>
      <path action="M">Framework/Test/Urg/Type/PositiveFloat.php</path>
      <path action="M">Framework/Test/Urg/Type/PositiveInteger.php</path>
      <path action="M">Framework/Test/Urg/Type/ZeroOrPositiveFloat.php</path>
      <path action="M">Framework/Test/Urg/Type/ZeroOrPositiveInteger.php</path>
    </paths>
  </logentry>
  <logentry revision="250">
    <author>hywan</author>
    <date>2009-03-04T18:09:12.401245Z</date>
    <msg>Mania : formatting a space.</msg>
    <paths>
      <path action="M">Framework/Test/Urg/Type/Xn.php</path>
    </paths>
  </logentry>
  <logentry revision="249">
    <author>hywan</author>
    <date>2009-03-04T18:04:49.940634Z</date>
    <msg>Call BOUND_CLOSE and not CLOSE and correct a parse error …</msg>
    <paths>
      <path action="M">Framework/Test/Urg/Type/Xn.php</path>
    </paths>
  </logentry>
  <logentry revision="248">
    <author>hywan</author>
    <date>2009-03-03T16:58:23.099434Z</date>
    <msg>Mania : formatting some spaces.</msg>
    <paths>
      <path action="M">Framework/Framework.php</path>
    </paths>
  </logentry>
  <logentry revision="247">
    <author>hywan</author>
    <date>2009-03-03T03:44:42.870306Z</date>
    <msg>Add a debug table (that will be print out).</msg>
    <paths>
      <path action="M">Framework/Test/Praspel/Praspel.php</path>
    </paths>
  </logentry>
  <logentry revision="246">
    <author>hywan</author>
    <date>2009-03-03T03:43:40.022858Z</date>
    <msg>Add default value for constructor's arguments (like Positive* and Negative* types).</msg>
    <paths>
      <path action="M">Framework/Test/Urg/Type/ZeroOrNegativeFloat.php</path>
      <path action="M">Framework/Test/Urg/Type/ZeroOrNegativeInteger.php</path>
      <path action="M">Framework/Test/Urg/Type/ZeroOrPositiveFloat.php</path>
      <path action="M">Framework/Test/Urg/Type/ZeroOrPositiveInteger.php</path>
    </paths>
  </logentry>
  <logentry revision="245">
    <author>hywan</author>
    <date>2009-03-03T03:42:59.233934Z</date>
    <msg>Oops, forget to remove some debug var_dump … It is too late maybe …</msg>
    <paths>
      <path action="M">Framework/Test/Urg/Type/BoundInteger.php</path>
    </paths>
  </logentry>
  <logentry revision="244">
    <author>hywan</author>
    <date>2009-03-03T03:37:06.462145Z</date>
    <msg>Correct bugs with bound (lower or upper, close or open etc.). Rewrite code to be more standard in the “bound logic”.</msg>
    <paths>
      <path action="M">Framework/Test/Urg/Type/BoundFloat.php</path>
      <path action="M">Framework/Test/Urg/Type/BoundInteger.php</path>
      <path action="M">Framework/Test/Urg/Type/Number.php</path>
    </paths>
  </logentry>
  <logentry revision="243">
    <author>hywan</author>
    <date>2009-03-03T03:11:24.497355Z</date>
    <msg>Add the Test folder with a default dictionary and empty directories (skeleton as well).</msg>
    <paths>
      <path action="A">Data/Test</path>
      <path action="A">Data/Test/Dictionary</path>
      <path action="A">Data/Test/Dictionary/Lipsum</path>
      <path action="A">Data/Test/Dictionary/Lipsum/Long.txt</path>
      <path action="A">Data/Test/Dictionary/Lipsum/Normal.txt</path>
      <path action="A">Data/Test/Dictionary/Lipsum/Short.txt</path>
      <path action="A">Data/Test/Incubator</path>
      <path action="A">Data/Test/Ordeal</path>
      <path action="A">Data/Test/Ordeal/Battleground</path>
      <path action="A">Data/Test/Ordeal/Oracle</path>
    </paths>
  </logentry>
  <logentry revision="242">
    <author>hywan</author>
    <date>2009-03-03T03:08:54.537580Z</date>
    <msg>Remove useless methods (data are accessibles through the Hoa_Test's singleton).</msg>
    <paths>
      <path action="M">Framework/Test/Praspel/Praspel.php</path>
    </paths>
  </logentry>
  <logentry revision="241">
    <author>hywan</author>
    <date>2009-03-03T03:07:54.104956Z</date>
    <msg>Add the dictionary support, rename the maxtry parameter, remove a useless call (for next revision), set the getParameters() and getParameter() method to public (was protected).</msg>
    <paths>
      <path action="M">Framework/Test/Test.php</path>
    </paths>
  </logentry>
  <logentry revision="240">
    <author>hywan</author>
    <date>2009-03-03T03:06:45.945613Z</date>
    <msg>Write the String and StringWith type.</msg>
    <paths>
      <path action="M">Framework/Test/Urg/Type/String.php</path>
      <path action="A">Framework/Test/Urg/Type/StringWith.php</path>
    </paths>
  </logentry>
  <logentry revision="239">
    <author>hywan</author>
    <date>2009-03-03T03:06:32.381688Z</date>
    <msg>Edit API documentation.</msg>
    <paths>
      <path action="M">Framework/Test/Urg/Type/Array.php</path>
    </paths>
  </logentry>
  <logentry revision="238">
    <author>hywan</author>
    <date>2009-03-03T01:41:14.136941Z</date>
    <msg>Add the maxtry.</msg>
    <paths>
      <path action="M">Framework/Test/Urg/Type/Array.php</path>
      <path action="M">Framework/Test/Urg/Type/Boolean.php</path>
      <path action="M">Framework/Test/Urg/Type/EvenInteger.php</path>
      <path action="M">Framework/Test/Urg/Type/Float.php</path>
      <path action="M">Framework/Test/Urg/Type/Integer.php</path>
      <path action="M">Framework/Test/Urg/Type/Integerpp.php</path>
      <path action="M">Framework/Test/Urg/Type/OddInteger.php</path>
      <path action="M">Framework/Test/Urg/Type/Xn.php</path>
    </paths>
  </logentry>
  <logentry revision="237">
    <author>hywan</author>
    <date>2009-03-03T00:49:07.422482Z</date>
    <msg>Add new types.</msg>
    <paths>
      <path action="A">Framework/Test/Urg/Type/2n.php</path>
      <path action="A">Framework/Test/Urg/Type/Array.php</path>
      <path action="A">Framework/Test/Urg/Type/ArrayInteger.php</path>
      <path action="A">Framework/Test/Urg/Type/Integerpp.php</path>
      <path action="A">Framework/Test/Urg/Type/Xn.php</path>
    </paths>
  </logentry>
  <logentry revision="236">
    <author>hywan</author>
    <date>2009-03-03T00:48:31.097380Z</date>
    <msg>Better deal with predicate in randomize() method.</msg>
    <paths>
      <path action="M">Framework/Test/Urg/Type/Boolean.php</path>
      <path action="M">Framework/Test/Urg/Type/EvenInteger.php</path>
      <path action="M">Framework/Test/Urg/Type/Float.php</path>
      <path action="M">Framework/Test/Urg/Type/Integer.php</path>
      <path action="M">Framework/Test/Urg/Type/OddInteger.php</path>
    </paths>
  </logentry>
  <logentry revision="235">
    <author>hywan</author>
    <date>2009-03-02T02:02:07.235382Z</date>
    <msg>Correct a bug with package parameters, better user's types support and correct a bad exception name in the getParameter() method.</msg>
    <paths>
      <path action="M">Framework/Test/Test.php</path>
    </paths>
  </logentry>
  <logentry revision="234">
    <author>hywan</author>
    <date>2009-03-02T02:00:59.505811Z</date>
    <msg>Finished to prepare the eyes.</msg>
    <paths>
      <path action="M">Framework/Test/Oracle/Eyes.php</path>
    </paths>
  </logentry>
  <logentry revision="233">
    <author>hywan</author>
    <date>2009-03-02T02:00:31.904303Z</date>
    <msg>Finished to prepare the ordeal.oracle and the ordeal.battleground.</msg>
    <paths>
      <path action="M">Framework/Test/Oracle/Oracle.php</path>
    </paths>
  </logentry>
  <logentry revision="232">
    <author>hywan</author>
    <date>2009-03-02T01:59:15.740787Z</date>
    <msg>Start to build the log, but it is not good …</msg>
    <paths>
      <path action="A">Framework/Test/Log.php</path>
    </paths>
  </logentry>
  <logentry revision="231">
    <author>hywan</author>
    <date>2009-03-02T01:58:45.201621Z</date>
    <msg>Adapt the clause() method to new clauses, better call support when calling a constructor, add the verify() method to verify a test.</msg>
    <paths>
      <path action="M">Framework/Test/Praspel/Praspel.php</path>
    </paths>
  </logentry>
  <logentry revision="230">
    <author>hywan</author>
    <date>2009-03-02T01:57:34.768960Z</date>
    <msg>Totally remake the free-variable management.</msg>
    <paths>
      <path action="M">Framework/Test/Praspel/FreeVariable.php</path>
    </paths>
  </logentry>
  <logentry revision="229">
    <author>hywan</author>
    <date>2009-03-02T01:56:45.117885Z</date>
    <msg>Manage the \old(e) constructor, and add the Praspel's root in attribute.</msg>
    <paths>
      <path action="M">Framework/Test/Praspel/Type.php</path>
    </paths>
  </logentry>
  <logentry revision="228">
    <author>hywan</author>
    <date>2009-03-02T01:55:17.998569Z</date>
    <msg>Write the “throws” clause.</msg>
    <paths>
      <path action="M">Framework/Test/Praspel/Clause/Throws.php</path>
    </paths>
  </logentry>
  <logentry revision="227">
    <author>hywan</author>
    <date>2009-03-02T01:54:53.444552Z</date>
    <msg>Adapt class to the “contract” abstract clause and his interface.</msg>
    <paths>
      <path action="M">Framework/Test/Praspel/Clause/Ensures.php</path>
    </paths>
  </logentry>
  <logentry revision="226">
    <author>hywan</author>
    <date>2009-03-02T01:53:46.869200Z</date>
    <msg>Write the “predicate” clause … or not, it is not yet supported ;-).</msg>
    <paths>
      <path action="A">Framework/Test/Praspel/Clause/Predicate.php</path>
    </paths>
  </logentry>
  <logentry revision="225">
    <author>hywan</author>
    <date>2009-03-02T01:53:06.367887Z</date>
    <msg>Write the “requires” clause. The only restriction is that a free-variable cannot be a constructor (like \result or \old(e)).</msg>
    <paths>
      <path action="M">Framework/Test/Praspel/Clause/Requires.php</path>
    </paths>
  </logentry>
  <logentry revision="224">
    <author>hywan</author>
    <date>2009-03-02T01:52:17.993275Z</date>
    <msg>Delete the “behavior” and “assumes” clauses.</msg>
    <paths>
      <path action="D">Framework/Test/Praspel/Clause/Assumes.php</path>
      <path action="D">Framework/Test/Praspel/Clause/Behavior.php</path>
    </paths>
  </logentry>
  <logentry revision="223">
    <author>hywan</author>
    <date>2009-03-02T01:51:34.156476Z</date>
    <msg>Write the “invariant” clause. The only restriction is that a free-variable cannot be a constructor (like \result or \old(e)).</msg>
    <paths>
      <path action="M">Framework/Test/Praspel/Clause/Invariant.php</path>
    </paths>
  </logentry>
  <logentry revision="222">
    <author>hywan</author>
    <date>2009-03-02T01:50:07.111314Z</date>
    <msg>Change super-clause for an interface, and create the “contract” clause for a pseudo/partial-inheritance.</msg>
    <paths>
      <path action="M">Framework/Test/Praspel/Clause.php</path>
      <path action="A">Framework/Test/Praspel/Clause/Contract.php</path>
    </paths>
  </logentry>
  <logentry revision="221">
    <author>hywan</author>
    <date>2009-03-02T01:48:10.298128Z</date>
    <msg>Reorganize the caller : with a magicCaller method, a better types support and a better object construction support — with reflection —.</msg>
    <paths>
      <path action="M">Framework/Test/Praspel/Call.php</path>
    </paths>
  </logentry>
  <logentry revision="220">
    <author>hywan</author>
    <date>2009-03-02T01:45:06.492214Z</date>
    <msg>Add the Praspel's compiler.</msg>
    <paths>
      <path action="A">Framework/Test/Praspel/Compiler.php</path>
    </paths>
  </logentry>
  <logentry revision="219">
    <author>hywan</author>
    <date>2009-03-02T01:44:29.767671Z</date>
    <msg>Reorganize all types …</msg>
    <paths>
      <path action="M">Framework/Test/Urg/Type/Boolean.php</path>
      <path action="M">Framework/Test/Urg/Type/BoundFloat.php</path>
      <path action="M">Framework/Test/Urg/Type/BoundInteger.php</path>
      <path action="M">Framework/Test/Urg/Type/EvenInteger.php</path>
      <path action="M">Framework/Test/Urg/Type/Float.php</path>
      <path action="M">Framework/Test/Urg/Type/Integer.php</path>
      <path action="M">Framework/Test/Urg/Type/NegativeFloat.php</path>
      <path action="M">Framework/Test/Urg/Type/NegativeInteger.php</path>
      <path action="M">Framework/Test/Urg/Type/Null.php</path>
      <path action="M">Framework/Test/Urg/Type/OddInteger.php</path>
      <path action="M">Framework/Test/Urg/Type/PositiveFloat.php</path>
      <path action="M">Framework/Test/Urg/Type/PositiveInteger.php</path>
      <path action="M">Framework/Test/Urg/Type/Void.php</path>
      <path action="M">Framework/Test/Urg/Type/ZeroOrNegativeFloat.php</path>
      <path action="M">Framework/Test/Urg/Type/ZeroOrNegativeInteger.php</path>
      <path action="M">Framework/Test/Urg/Type/ZeroOrPositiveFloat.php</path>
      <path action="M">Framework/Test/Urg/Type/ZeroOrPositiveInteger.php</path>
    </paths>
  </logentry>
  <logentry revision="218">
    <author>hywan</author>
    <date>2009-03-02T01:43:13.140789Z</date>
    <msg>tokenize() and dump() methods are more tolerant : Pom_Token_Root to Visitor_Element ; allow user to tokenize or dump any nodes of the object-model.</msg>
    <paths>
      <path action="M">Framework/Pom/Pom.php</path>
    </paths>
  </logentry>
  <logentry revision="217">
    <author>hywan</author>
    <date>2009-03-02T01:41:43.043825Z</date>
    <msg>Add the Php token : open and close tag.</msg>
    <paths>
      <path action="A">Framework/Pom/Token/Php.php</path>
    </paths>
  </logentry>
  <logentry revision="216">
    <author>hywan</author>
    <date>2009-03-02T01:41:26.495628Z</date>
    <msg>Change the filter : switch/case on class name to if/instanceof.</msg>
    <paths>
      <path action="M">Framework/Pom/Token/ControlStructure/Return.php</path>
    </paths>
  </logentry>
  <logentry revision="215">
    <author>hywan</author>
    <date>2009-03-02T01:40:29.327783Z</date>
    <msg>The addBody() method should now consume a return statement.</msg>
    <paths>
      <path action="M">Framework/Pom/Token/Function.php</path>
    </paths>
  </logentry>
  <logentry revision="214">
    <author>hywan</author>
    <date>2009-03-02T01:39:34.576147Z</date>
    <msg>Add the “arguments” attribute to build a function call more quickly. Correct a bug on a bad variable using in setName() method.</msg>
    <paths>
      <path action="M">Framework/Pom/Token/Call/Function.php</path>
    </paths>
  </logentry>
  <logentry revision="213">
    <author>hywan</author>
    <date>2009-03-02T01:38:46.107895Z</date>
    <msg>Add the “attribute” parameter to build an attribute call more quickly.</msg>
    <paths>
      <path action="M">Framework/Pom/Token/Call/Attribute.php</path>
    </paths>
  </logentry>
  <logentry revision="212">
    <author>hywan</author>
    <date>2009-03-02T01:37:48.460246Z</date>
    <msg>Change the parent : Call to Call_Function. So, reorganize the code in consequence.</msg>
    <paths>
      <path action="M">Framework/Pom/Token/Call/Method.php</path>
    </paths>
  </logentry>
  <logentry revision="211">
    <author>hywan</author>
    <date>2009-03-02T01:36:42.363909Z</date>
    <msg>Add the “value” parameter to build an attribute quickly.</msg>
    <paths>
      <path action="M">Framework/Pom/Token/Class/Attribute.php</path>
    </paths>
  </logentry>
  <logentry revision="210">
    <author>hywan</author>
    <date>2009-03-02T01:35:25.967961Z</date>
    <msg>Resolve a bug where an array does not have an explicit key (i.e. only value is declared). Reorganize some lines on the rest of the code.</msg>
    <paths>
      <path action="M">Framework/Pom/Token/Array.php</path>
    </paths>
  </logentry>
  <logentry revision="209">
    <author>hywan</author>
    <date>2009-03-02T01:33:59.950850Z</date>
    <msg>Add a constructor for adding tokens more fluently.</msg>
    <paths>
      <path action="M">Framework/Pom/Token/LateParsing.php</path>
    </paths>
  </logentry>
  <logentry revision="208">
    <author>hywan</author>
    <date>2009-03-02T01:32:48.309454Z</date>
    <msg>Change context of the getSequence() method : protected to public.</msg>
    <paths>
      <path action="M">Framework/Pom/Token/Operation.php</path>
    </paths>
  </logentry>
  <logentry revision="207">
    <author>hywan</author>
    <date>2009-03-02T01:32:17.134552Z</date>
    <msg>Correct the regular expression …</msg>
    <paths>
      <path action="M">Framework/Pom/Token/Whitespace.php</path>
    </paths>
  </logentry>
  <logentry revision="206">
    <author>hywan</author>
    <date>2009-03-02T01:31:29.290172Z</date>
    <msg>Add the Php token in registers.</msg>
    <paths>
      <path action="M">Framework/Pom/Token/Util/Visitor/PrettyPrint.php</path>
      <path action="M">Framework/Pom/Token/Util/Visitor/Tokenize.php</path>
    </paths>
  </logentry>
  <logentry revision="205">
    <author>hywan</author>
    <date>2009-03-02T01:30:34.691854Z</date>
    <msg>Add visitors for the Php token.</msg>
    <paths>
      <path action="A">Framework/Pom/Token/Util/Visitor/PrettyPrint/Php.php</path>
      <path action="A">Framework/Pom/Token/Util/Visitor/Tokenize/Php.php</path>
    </paths>
  </logentry>
  <logentry revision="204">
    <author>hywan</author>
    <date>2009-03-02T01:29:53.889793Z</date>
    <msg>Add array indexes (more explicit) for the “tokenizer array”.</msg>
    <paths>
      <path action="M">Framework/Pom/Token/Util/Visitor/Tokenize/Comment.php</path>
      <path action="M">Framework/Pom/Token/Util/Visitor/Tokenize/OutterPhp.php</path>
    </paths>
  </logentry>
  <logentry revision="203">
    <author>hywan</author>
    <date>2009-03-02T01:28:50.961377Z</date>
    <msg>Print a newline after a simple instruction.</msg>
    <paths>
      <path action="M">Framework/Pom/Token/Util/Visitor/PrettyPrint/Instruction.php</path>
    </paths>
  </logentry>
  <logentry revision="202">
    <author>hywan</author>
    <date>2009-03-02T01:28:16.905890Z</date>
    <msg>Solve a bug when an array has many entries : forget to concatenate results, returned the last render.</msg>
    <paths>
      <path action="M">Framework/Pom/Token/Util/Visitor/PrettyPrint/Array.php</path>
    </paths>
  </logentry>
  <logentry revision="201">
    <author>hywan</author>
    <date>2009-03-02T01:26:59.350423Z</date>
    <msg>Oops, bad argument for the accept() method.</msg>
    <paths>
      <path action="M">Framework/Pom/Token/Util/Visitor/PrettyPrint/Operation.php</path>
    </paths>
  </logentry>
  <logentry revision="200">
    <author>hywan</author>
    <date>2009-03-02T01:25:42.684430Z</date>
    <msg>Replace a normal visitor flow by a redirection to Call_Function.</msg>
    <paths>
      <path action="M">Framework/Pom/Token/Util/Visitor/PrettyPrint/Call.php</path>
      <path action="M">Framework/Pom/Token/Util/Visitor/Tokenize/Call.php</path>
    </paths>
  </logentry>
  <logentry revision="199">
    <author>hywan</author>
    <date>2009-03-02T01:24:13.946108Z</date>
    <msg>Bad visitor redirection : called Function_Named instead of Call_Function …</msg>
    <paths>
      <path action="M">Framework/Pom/Token/Util/Visitor/PrettyPrint/New.php</path>
      <path action="M">Framework/Pom/Token/Util/Visitor/Tokenize/New.php</path>
    </paths>
  </logentry>
  <logentry revision="198">
    <author>hywan</author>
    <date>2009-02-22T20:59:32.148207Z</date>
    <msg>Oops, does not extend Integer but Float …</msg>
    <paths>
      <path action="M">Framework/Test/Urg/Type/BoundFloat.php</path>
    </paths>
  </logentry>
  <logentry revision="197">
    <author>hywan</author>
    <date>2009-02-19T19:07:05.082552Z</date>
    <msg>Adapt the type() method to new factory of type.</msg>
    <paths>
      <path action="M">Framework/Test/Praspel/Praspel.php</path>
    </paths>
  </logentry>
  <logentry revision="196">
    <author>hywan</author>
    <date>2009-02-19T19:05:20.621466Z</date>
    <msg>Adapt the hasType() method to the new factory of type, and correct a syntax error</msg>
    <paths>
      <path action="M">Framework/Test/Praspel/FreeVariable.php</path>
    </paths>
  </logentry>
  <logentry revision="195">
    <author>hywan</author>
    <date>2009-02-19T19:04:39.052476Z</date>
    <msg>Better factory for type (with Reflection).</msg>
    <paths>
      <path action="M">Framework/Test/Praspel/Type.php</path>
    </paths>
  </logentry>
  <logentry revision="194">
    <author>hywan</author>
    <date>2009-02-19T19:03:17.558037Z</date>
    <msg>Bad method name (declare() -&amp;gt; declareFreeVariable()).</msg>
    <paths>
      <path action="M">Framework/Test/Praspel/Clause.php</path>
    </paths>
  </logentry>
  <logentry revision="193">
    <author>hywan</author>
    <date>2009-02-19T19:02:43.854348Z</date>
    <msg>Bad attribute name.</msg>
    <paths>
      <path action="M">Framework/Test/Praspel/Call.php</path>
    </paths>
  </logentry>
  <logentry revision="192">
    <author>hywan</author>
    <date>2009-02-19T19:01:58.855470Z</date>
    <msg>Make some corrections : Type interface is better implemented, default values in constructor etc.</msg>
    <paths>
      <path action="M">Framework/Test/Urg/Type/Boolean.php</path>
      <path action="M">Framework/Test/Urg/Type/BoundFloat.php</path>
      <path action="M">Framework/Test/Urg/Type/BoundInteger.php</path>
      <path action="M">Framework/Test/Urg/Type/EvenInteger.php</path>
      <path action="M">Framework/Test/Urg/Type/Float.php</path>
      <path action="M">Framework/Test/Urg/Type/Integer.php</path>
      <path action="M">Framework/Test/Urg/Type/Interface/Predicable.php</path>
      <path action="M">Framework/Test/Urg/Type/NegativeFloat.php</path>
      <path action="M">Framework/Test/Urg/Type/NegativeInteger.php</path>
      <path action="M">Framework/Test/Urg/Type/Null.php</path>
      <path action="M">Framework/Test/Urg/Type/Number.php</path>
      <path action="M">Framework/Test/Urg/Type/OddInteger.php</path>
      <path action="M">Framework/Test/Urg/Type/PositiveFloat.php</path>
      <path action="M">Framework/Test/Urg/Type/PositiveInteger.php</path>
      <path action="M">Framework/Test/Urg/Type/Void.php</path>
      <path action="M">Framework/Test/Urg/Type/ZeroOrNegativeFloat.php</path>
      <path action="M">Framework/Test/Urg/Type/ZeroOrNegativeInteger.php</path>
      <path action="M">Framework/Test/Urg/Type/ZeroOrPositiveFloat.php</path>
      <path action="M">Framework/Test/Urg/Type/ZeroOrPositiveInteger.php</path>
    </paths>
  </logentry>
  <logentry revision="191">
    <author>hywan</author>
    <date>2009-02-18T18:19:43.848349Z</date>
    <msg>More logical variable name, and change API documentation in consequence.</msg>
    <paths>
      <path action="M">Framework/Test/Urg/Type/Interface/Predicable.php</path>
    </paths>
  </logentry>
  <logentry revision="190">
    <author>hywan</author>
    <date>2009-02-18T18:19:17.140298Z</date>
    <msg>Add the super-interface Type.</msg>
    <paths>
      <path action="A">Framework/Test/Urg/Type/Interface/Type.php</path>
    </paths>
  </logentry>
  <logentry revision="189">
    <author>hywan</author>
    <date>2009-02-18T18:18:44.355029Z</date>
    <msg>Mania : formatting spaces.</msg>
    <paths>
      <path action="M">Framework/Framework.php</path>
    </paths>
  </logentry>
  <logentry revision="188">
    <author>hywan</author>
    <date>2009-02-18T18:18:13.832692Z</date>
    <msg>Start Praspel's object model.</msg>
    <paths>
      <path action="A">Framework/Test/Praspel</path>
      <path action="A">Framework/Test/Praspel/Call.php</path>
      <path action="A">Framework/Test/Praspel/Clause</path>
      <path action="A">Framework/Test/Praspel/Clause.php</path>
      <path action="A">Framework/Test/Praspel/Clause/Assumes.php</path>
      <path action="A">Framework/Test/Praspel/Clause/Behavior.php</path>
      <path action="A">Framework/Test/Praspel/Clause/Ensures.php</path>
      <path action="A">Framework/Test/Praspel/Clause/Invariant.php</path>
      <path action="A">Framework/Test/Praspel/Clause/Requires.php</path>
      <path action="A">Framework/Test/Praspel/Clause/Throws.php</path>
      <path action="A">Framework/Test/Praspel/Constructor</path>
      <path action="A">Framework/Test/Praspel/Constructor/Old.php</path>
      <path action="A">Framework/Test/Praspel/Constructor/Result.php</path>
      <path action="A">Framework/Test/Praspel/Exception.php</path>
      <path action="A">Framework/Test/Praspel/FreeVariable.php</path>
      <path action="A">Framework/Test/Praspel/Praspel.php</path>
      <path action="A">Framework/Test/Praspel/Type.php</path>
    </paths>
  </logentry>
  <logentry revision="187">
    <author>hywan</author>
    <date>2009-02-16T02:05:28.072155Z</date>
    <msg>Add the tokenize() and dump() methods. Remove the build() method.</msg>
    <paths>
      <path action="M">Framework/Pom/Pom.php</path>
    </paths>
  </logentry>
  <logentry revision="186">
    <author>hywan</author>
    <date>2009-02-16T01:53:12.389380Z</date>
    <msg>Correct a bug around the late parsing buffer.</msg>
    <paths>
      <path action="M">Framework/Pom/Parser/ParserLr.php</path>
    </paths>
  </logentry>
  <logentry revision="185">
    <author>hywan</author>
    <date>2009-02-16T01:51:36.708085Z</date>
    <msg>Better indentation support.</msg>
    <paths>
      <path action="M">Framework/Pom/Token/Util/Visitor/PrettyPrint/Class.php</path>
    </paths>
  </logentry>
  <logentry revision="184">
    <author>hywan</author>
    <date>2009-02-15T22:57:39.999602Z</date>
    <msg>Correct a bug with close braces.</msg>
    <paths>
      <path action="M">Framework/Pom/Parser/ParserLr.php</path>
    </paths>
  </logentry>
  <logentry revision="183">
    <author>hywan</author>
    <date>2009-02-15T22:57:16.454103Z</date>
    <msg>Remove the dumper import.</msg>
    <paths>
      <path action="M">Framework/Pom/Pom.php</path>
    </paths>
  </logentry>
  <logentry revision="182">
    <author>hywan</author>
    <date>2009-02-15T22:56:57.893520Z</date>
    <msg>Add the getLastElement() method.</msg>
    <paths>
      <path action="M">Framework/Pom/Token/Root.php</path>
    </paths>
  </logentry>
  <logentry revision="181">
    <author>hywan</author>
    <date>2009-02-15T22:56:37.923129Z</date>
    <msg>Add the hasValue() method.</msg>
    <paths>
      <path action="M">Framework/Pom/Token/ControlStructure/Return.php</path>
    </paths>
  </logentry>
  <logentry revision="180">
    <author>hywan</author>
    <date>2009-02-15T22:55:58.944653Z</date>
    <msg>Add the pop() and shift() methods.</msg>
    <paths>
      <path action="M">Framework/Pom/Token/LateParsing.php</path>
    </paths>
  </logentry>
  <logentry revision="179">
    <author>hywan</author>
    <date>2009-02-15T22:55:31.788507Z</date>
    <msg>Add the pretty-print visitor.</msg>
    <paths>
      <path action="A">Framework/Pom/Token/Util/Visitor/PrettyPrint</path>
      <path action="A">Framework/Pom/Token/Util/Visitor/PrettyPrint.php</path>
      <path action="A">Framework/Pom/Token/Util/Visitor/PrettyPrint/Aggregate.php</path>
      <path action="A">Framework/Pom/Token/Util/Visitor/PrettyPrint/Array.php</path>
      <path action="A">Framework/Pom/Token/Util/Visitor/PrettyPrint/Call.php</path>
      <path action="A">Framework/Pom/Token/Util/Visitor/PrettyPrint/Cast.php</path>
      <path action="A">Framework/Pom/Token/Util/Visitor/PrettyPrint/Class.php</path>
      <path action="A">Framework/Pom/Token/Util/Visitor/PrettyPrint/Clone.php</path>
      <path action="A">Framework/Pom/Token/Util/Visitor/PrettyPrint/Comment.php</path>
      <path action="A">Framework/Pom/Token/Util/Visitor/PrettyPrint/ControlStructure.php</path>
      <path action="A">Framework/Pom/Token/Util/Visitor/PrettyPrint/Exception.php</path>
      <path action="A">Framework/Pom/Token/Util/Visitor/PrettyPrint/Function.php</path>
      <path action="A">Framework/Pom/Token/Util/Visitor/PrettyPrint/Instruction.php</path>
      <path action="A">Framework/Pom/Token/Util/Visitor/PrettyPrint/Interface.php</path>
      <path action="A">Framework/Pom/Token/Util/Visitor/PrettyPrint/LateParsing.php</path>
      <path action="A">Framework/Pom/Token/Util/Visitor/PrettyPrint/New.php</path>
      <path action="A">Framework/Pom/Token/Util/Visitor/PrettyPrint/Number.php</path>
      <path action="A">Framework/Pom/Token/Util/Visitor/PrettyPrint/Operation.php</path>
      <path action="A">Framework/Pom/Token/Util/Visitor/PrettyPrint/Operator.php</path>
      <path action="A">Framework/Pom/Token/Util/Visitor/PrettyPrint/OutterPhp.php</path>
      <path action="A">Framework/Pom/Token/Util/Visitor/PrettyPrint/Root.php</path>
      <path action="A">Framework/Pom/Token/Util/Visitor/PrettyPrint/String.php</path>
      <path action="A">Framework/Pom/Token/Util/Visitor/PrettyPrint/Variable.php</path>
      <path action="A">Framework/Pom/Token/Util/Visitor/PrettyPrint/Whitespace.php</path>
      <path action="M">Framework/Pom/Token/Util/Visitor/Tokenize/Array.php</path>
      <path action="M">Framework/Pom/Token/Util/Visitor/Tokenize/ControlStructure.php</path>
      <path action="M">Framework/Pom/Token/Util/Visitor/Tokenize/Operation.php</path>
    </paths>
  </logentry>
  <logentry revision="178">
    <author>hywan</author>
    <date>2009-02-15T22:53:54.486185Z</date>
    <msg>Useless code. Replaced by the pretty-printer.</msg>
    <paths>
      <path action="D">Framework/Pom/Dumper.php</path>
      <path action="D">Framework/Pom/Plugin</path>
      <path action="D">Framework/Pom/Style</path>
    </paths>
  </logentry>
  <logentry revision="177">
    <author>hywan</author>
    <date>2009-02-15T14:28:21.387410Z</date>
    <msg>Add the aggregate visitor.</msg>
    <paths>
      <path action="A">Framework/Visitor/Registry</path>
      <path action="A">Framework/Visitor/Registry/Aggregate.php</path>
      <path action="A">Framework/Visitor/Registry/Exception.php</path>
    </paths>
  </logentry>
  <logentry revision="176">
    <author>hywan</author>
    <date>2009-02-15T14:28:02.520364Z</date>
    <msg>Correct a bug and variables confusing in the visit() method, and add the visitEntry() method to solve the problem with inheritance and overloading of accept() in aggregates visitors elements.</msg>
    <paths>
      <path action="M">Framework/Visitor/Registry.php</path>
    </paths>
  </logentry>
  <logentry revision="175">
    <author>hywan</author>
    <date>2009-02-15T14:25:43.755522Z</date>
    <msg>Correct a bug in function's and method's braces management.</msg>
    <paths>
      <path action="M">Framework/Pom/Parser/ParserLr.php</path>
    </paths>
  </logentry>
  <logentry revision="174">
    <author>hywan</author>
    <date>2009-02-15T14:24:22.295469Z</date>
    <msg>Adapt the parser to the tokenize visitor.</msg>
    <paths>
      <path action="M">Framework/Pom/Parser.php</path>
    </paths>
  </logentry>
  <logentry revision="173">
    <author>hywan</author>
    <date>2009-02-15T14:23:35.888371Z</date>
    <msg>Export the tokenizing action in visitor ; more light and clear, and maintenance of many files.</msg>
    <paths>
      <path action="M">Framework/Pom/Token/Array.php</path>
      <path action="M">Framework/Pom/Token/Call.php</path>
      <path action="M">Framework/Pom/Token/Call/Attribute.php</path>
      <path action="M">Framework/Pom/Token/Call/ClassConstant.php</path>
      <path action="M">Framework/Pom/Token/Call/Function.php</path>
      <path action="M">Framework/Pom/Token/Call/Method.php</path>
      <path action="M">Framework/Pom/Token/Call/StaticAttribute.php</path>
      <path action="M">Framework/Pom/Token/Call/StaticMethod.php</path>
      <path action="M">Framework/Pom/Token/Cast.php</path>
      <path action="M">Framework/Pom/Token/Class.php</path>
      <path action="M">Framework/Pom/Token/Class/Access.php</path>
      <path action="M">Framework/Pom/Token/Class/Attribute.php</path>
      <path action="M">Framework/Pom/Token/Class/Constant.php</path>
      <path action="M">Framework/Pom/Token/Class/Method.php</path>
      <path action="M">Framework/Pom/Token/Clone.php</path>
      <path action="M">Framework/Pom/Token/Comment.php</path>
      <path action="M">Framework/Pom/Token/ControlStructure.php</path>
      <path action="M">Framework/Pom/Token/ControlStructure/Break.php</path>
      <path action="M">Framework/Pom/Token/ControlStructure/Conditional.php</path>
      <path action="M">Framework/Pom/Token/ControlStructure/Conditional/If.php</path>
      <path action="M">Framework/Pom/Token/ControlStructure/Conditional/If/Else.php</path>
      <path action="M">Framework/Pom/Token/ControlStructure/Conditional/If/Elseif.php</path>
      <path action="M">Framework/Pom/Token/ControlStructure/Conditional/If/If.php</path>
      <path action="M">Framework/Pom/Token/ControlStructure/Conditional/Switch.php</path>
      <path action="M">Framework/Pom/Token/ControlStructure/Conditional/Switch/Case.php</path>
      <path action="M">Framework/Pom/Token/ControlStructure/Conditional/Switch/Default.php</path>
      <path action="M">Framework/Pom/Token/ControlStructure/Continue.php</path>
      <path action="M">Framework/Pom/Token/ControlStructure/Import.php</path>
      <path action="M">Framework/Pom/Token/ControlStructure/Import/Include.php</path>
      <path action="M">Framework/Pom/Token/ControlStructure/Import/IncludeOnce.php</path>
      <path action="M">Framework/Pom/Token/ControlStructure/Import/Require.php</path>
      <path action="M">Framework/Pom/Token/ControlStructure/Import/RequireOnce.php</path>
      <path action="M">Framework/Pom/Token/ControlStructure/Loop.php</path>
      <path action="M">Framework/Pom/Token/ControlStructure/Loop/DoWhile.php</path>
      <path action="M">Framework/Pom/Token/ControlStructure/Loop/For.php</path>
      <path action="M">Framework/Pom/Token/ControlStructure/Loop/Foreach.php</path>
      <path action="M">Framework/Pom/Token/ControlStructure/Loop/While.php</path>
      <path action="M">Framework/Pom/Token/ControlStructure/Return.php</path>
      <path action="M">Framework/Pom/Token/ControlStructure/TryCatch.php</path>
      <path action="M">Framework/Pom/Token/ControlStructure/TryCatch/Catch.php</path>
      <path action="M">Framework/Pom/Token/ControlStructure/TryCatch/Try.php</path>
      <path action="M">Framework/Pom/Token/Exception.php</path>
      <path action="M">Framework/Pom/Token/Function.php</path>
      <path action="M">Framework/Pom/Token/Function/Argument.php</path>
      <path action="M">Framework/Pom/Token/Function/Named.php</path>
      <path action="M">Framework/Pom/Token/Instruction.php</path>
      <path action="M">Framework/Pom/Token/Instruction/Block.php</path>
      <path action="M">Framework/Pom/Token/Interface.php</path>
      <path action="M">Framework/Pom/Token/LateParsing.php</path>
      <path action="M">Framework/Pom/Token/New.php</path>
      <path action="M">Framework/Pom/Token/Number.php</path>
      <path action="M">Framework/Pom/Token/Number/DNumber.php</path>
      <path action="M">Framework/Pom/Token/Number/LNumber.php</path>
      <path action="M">Framework/Pom/Token/Operation.php</path>
      <path action="M">Framework/Pom/Token/Operator.php</path>
      <path action="M">Framework/Pom/Token/OutterPhp.php</path>
      <path action="M">Framework/Pom/Token/Root.php</path>
      <path action="M">Framework/Pom/Token/String.php</path>
      <path action="M">Framework/Pom/Token/String/EncapsedConstant.php</path>
      <path action="D">Framework/Pom/Token/Util/Interface/Tokenizable.php</path>
      <path action="A">Framework/Pom/Token/Util/Visitor</path>
      <path action="A">Framework/Pom/Token/Util/Visitor/Tokenize</path>
      <path action="A">Framework/Pom/Token/Util/Visitor/Tokenize.php</path>
      <path action="A">Framework/Pom/Token/Util/Visitor/Tokenize/Array.php</path>
      <path action="A">Framework/Pom/Token/Util/Visitor/Tokenize/Call.php</path>
      <path action="A">Framework/Pom/Token/Util/Visitor/Tokenize/Cast.php</path>
      <path action="A">Framework/Pom/Token/Util/Visitor/Tokenize/Class.php</path>
      <path action="A">Framework/Pom/Token/Util/Visitor/Tokenize/Clone.php</path>
      <path action="A">Framework/Pom/Token/Util/Visitor/Tokenize/Comment.php</path>
      <path action="A">Framework/Pom/Token/Util/Visitor/Tokenize/ControlStructure.php</path>
      <path action="A">Framework/Pom/Token/Util/Visitor/Tokenize/Exception.php</path>
      <path action="A">Framework/Pom/Token/Util/Visitor/Tokenize/Function.php</path>
      <path action="A">Framework/Pom/Token/Util/Visitor/Tokenize/Instruction.php</path>
      <path action="A">Framework/Pom/Token/Util/Visitor/Tokenize/Interface.php</path>
      <path action="A">Framework/Pom/Token/Util/Visitor/Tokenize/LateParsing.php</path>
      <path action="A">Framework/Pom/Token/Util/Visitor/Tokenize/New.php</path>
      <path action="A">Framework/Pom/Token/Util/Visitor/Tokenize/Number.php</path>
      <path action="A">Framework/Pom/Token/Util/Visitor/Tokenize/Operation.php</path>
      <path action="A">Framework/Pom/Token/Util/Visitor/Tokenize/Operator.php</path>
      <path action="A">Framework/Pom/Token/Util/Visitor/Tokenize/OutterPhp.php</path>
      <path action="A">Framework/Pom/Token/Util/Visitor/Tokenize/Root.php</path>
      <path action="A">Framework/Pom/Token/Util/Visitor/Tokenize/String.php</path>
      <path action="A">Framework/Pom/Token/Util/Visitor/Tokenize/Variable.php</path>
      <path action="A">Framework/Pom/Token/Util/Visitor/Tokenize/Whitespace.php</path>
      <path action="M">Framework/Pom/Token/Variable.php</path>
      <path action="M">Framework/Pom/Token/Whitespace.php</path>
    </paths>
  </logentry>
  <logentry revision="172">
    <author>hywan</author>
    <date>2009-02-14T18:29:47.499708Z</date>
    <msg>Add a registry of visitors (read the API documentation of class to learn more about).</msg>
    <paths>
      <path action="A">Framework/Visitor/Registry.php</path>
    </paths>
  </logentry>
  <logentry revision="171">
    <author>hywan</author>
    <date>2009-02-14T18:06:02.353897Z</date>
    <msg>Add the &amp;$handle parameters to visit() and accept() method, to carry data through visits.
</msg>
    <paths>
      <path action="M">Framework/Visitor/Element.php</path>
      <path action="M">Framework/Visitor/Visit.php</path>
    </paths>
  </logentry>
  <logentry revision="170">
    <author>hywan</author>
    <date>2009-02-14T17:26:41.850888Z</date>
    <msg>More strict visit() method : add the Hoa_Visitor_Element filter.</msg>
    <paths>
      <path action="M">Framework/Visitor/Visit.php</path>
    </paths>
  </logentry>
  <logentry revision="169">
    <author>hywan</author>
    <date>2009-02-14T16:00:14.037456Z</date>
    <msg>Add the package Hoa_Visitor.</msg>
    <paths>
      <path action="A">Framework/Visitor</path>
      <path action="A">Framework/Visitor/Element.php</path>
      <path action="A">Framework/Visitor/Exception.php</path>
      <path action="A">Framework/Visitor/Visit.php</path>
    </paths>
  </logentry>
  <logentry revision="168">
    <author>hywan</author>
    <date>2009-02-14T02:13:28.972154Z</date>
    <msg>Continue to develop the oracle (big WIP).</msg>
    <paths>
      <path action="M">Framework/Test/Oracle/Eyes.php</path>
      <path action="M">Framework/Test/Oracle/Oracle.php</path>
    </paths>
  </logentry>
  <logentry revision="167">
    <author>hywan</author>
    <date>2009-02-14T02:12:56.065213Z</date>
    <msg>Add the parameter “test.ordeal.methodPrefix”.</msg>
    <paths>
      <path action="M">Framework/Test/Test.php</path>
    </paths>
  </logentry>
  <logentry revision="166">
    <author>hywan</author>
    <date>2009-02-14T02:12:17.536017Z</date>
    <msg>Correct API documentation. Adapt the code to the new constants (ZERO, CLOSEST* and INFINITY*) of Integer and Float types.</msg>
    <paths>
      <path action="M">Framework/Test/Urg/Urg.php</path>
    </paths>
  </logentry>
  <logentry revision="165">
    <author>hywan</author>
    <date>2009-02-14T02:06:55.414271Z</date>
    <msg>Add the Null and Void type (similar).</msg>
    <paths>
      <path action="A">Framework/Test/Urg/Type/Null.php</path>
      <path action="A">Framework/Test/Urg/Type/Void.php</path>
    </paths>
  </logentry>
  <logentry revision="164">
    <author>hywan</author>
    <date>2009-02-14T02:06:41.919114Z</date>
    <msg>Change the randomize() method context to public (to be conform with the Randomizable interface).</msg>
    <paths>
      <path action="M">Framework/Test/Urg/Type/Boolean.php</path>
      <path action="M">Framework/Test/Urg/Type/Number.php</path>
    </paths>
  </logentry>
  <logentry revision="163">
    <author>hywan</author>
    <date>2009-02-14T01:56:36.574595Z</date>
    <msg>Add ZERO, CLOSEST_ZERO* and INFINITY* constants in Integer and Float and write appropriate methods. Adapt childs to these modifications. Change the randomize() method context to public (to be conform with the Randomizable interface).</msg>
    <paths>
      <path action="M">Framework/Test/Urg/Type/Boolean.php</path>
      <path action="M">Framework/Test/Urg/Type/EvenInteger.php</path>
      <path action="M">Framework/Test/Urg/Type/Float.php</path>
      <path action="M">Framework/Test/Urg/Type/Integer.php</path>
      <path action="M">Framework/Test/Urg/Type/OddInteger.php</path>
    </paths>
  </logentry>
  <logentry revision="162">
    <author>hywan</author>
    <date>2009-02-14T01:22:52.169078Z</date>
    <msg>Add the TOKENIZE_LATE constant to be synchronize with the lexer's constants.</msg>
    <paths>
      <path action="M">Framework/Pom/Pom.php</path>
    </paths>
  </logentry>
  <logentry revision="161">
    <author>hywan</author>
    <date>2009-02-14T01:22:08.684614Z</date>
    <msg>Continue the parser : manage late parsing in functions' and methods' body, manage super-scalar array, correct somes bugs etc.</msg>
    <paths>
      <path action="M">Framework/Pom/Parser/ParserLr.php</path>
    </paths>
  </logentry>
  <logentry revision="160">
    <author>hywan</author>
    <date>2009-02-14T01:18:57.839633Z</date>
    <msg>Add the LATE constant, and some code and API documentation corrections.</msg>
    <paths>
      <path action="M">Framework/Pom/Parser/Lexer.php</path>
    </paths>
  </logentry>
  <logentry revision="159">
    <author>hywan</author>
    <date>2009-02-14T01:16:40.329428Z</date>
    <msg>Adapt the function to late parsing (function's body is late parsed in the parser).</msg>
    <paths>
      <path action="M">Framework/Pom/Token/Function.php</path>
    </paths>
  </logentry>
  <logentry revision="158">
    <author>hywan</author>
    <date>2009-02-14T01:16:00.112166Z</date>
    <msg>Add the late parsing “token”.</msg>
    <paths>
      <path action="A">Framework/Pom/Token/LateParsing.php</path>
    </paths>
  </logentry>
  <logentry revision="157">
    <author>hywan</author>
    <date>2009-02-14T01:15:35.164258Z</date>
    <msg>Review the isUniformSuperScalar() method, was totally wrong ….</msg>
    <paths>
      <path action="M">Framework/Pom/Token/Array.php</path>
    </paths>
  </logentry>
  <logentry revision="156">
    <author>hywan</author>
    <date>2009-02-14T01:14:49.140987Z</date>
    <msg>Correct a “bug” (a missing at least) in scalar and super-scalar management.</msg>
    <paths>
      <path action="M">Framework/Pom/Token/Class/Attribute.php</path>
      <path action="M">Framework/Pom/Token/Function/Argument.php</path>
    </paths>
  </logentry>
  <logentry revision="155">
    <author>hywan</author>
    <date>2009-02-14T01:11:22.989969Z</date>
    <msg>Add an example in the API documentation to be more clear.</msg>
    <paths>
      <path action="M">Framework/Pom/Token/Util/Interface/SuperScalar.php</path>
    </paths>
  </logentry>
  <logentry revision="154">
    <author>hywan</author>
    <date>2009-02-12T16:55:37.669838Z</date>
    <msg>Refresh the package : correct some bugs, complete some token cases etc.</msg>
    <paths>
      <path action="M">Framework/Pom/Token/Array.php</path>
      <path action="M">Framework/Pom/Token/Call/Attribute.php</path>
      <path action="M">Framework/Pom/Token/Call/ClassConstant.php</path>
      <path action="M">Framework/Pom/Token/Call/Function.php</path>
      <path action="M">Framework/Pom/Token/Call/Method.php</path>
      <path action="M">Framework/Pom/Token/Call/StaticAttribute.php</path>
      <path action="M">Framework/Pom/Token/Call/StaticMethod.php</path>
      <path action="M">Framework/Pom/Token/Class.php</path>
      <path action="M">Framework/Pom/Token/Class/Attribute.php</path>
      <path action="M">Framework/Pom/Token/Class/Constant.php</path>
      <path action="M">Framework/Pom/Token/Clone.php</path>
      <path action="M">Framework/Pom/Token/Exception.php</path>
      <path action="M">Framework/Pom/Token/Function.php</path>
      <path action="M">Framework/Pom/Token/Function/Argument.php</path>
      <path action="M">Framework/Pom/Token/Instruction.php</path>
      <path action="M">Framework/Pom/Token/Instruction/Block.php</path>
      <path action="M">Framework/Pom/Token/Interface.php</path>
      <path action="M">Framework/Pom/Token/New.php</path>
      <path action="M">Framework/Pom/Token/Operation.php</path>
      <path action="M">Framework/Pom/Token/Variable.php</path>
    </paths>
  </logentry>
  <logentry revision="153">
    <author>hywan</author>
    <date>2009-02-11T16:29:45.306572Z</date>
    <msg>Add S_64_BITS and S_32_BITS constants to know if PHP is on a 64 or 32 bits system.</msg>
    <paths>
      <path action="M">Framework/Framework.php</path>
    </paths>
  </logentry>
  <logentry revision="152">
    <author>hywan</author>
    <date>2009-02-10T16:43:22.682756Z</date>
    <msg>Implement Hoa_Test_Urg::Uc() and ~::Ud() method.
</msg>
    <paths>
      <path action="M">Framework/Test/Urg/Type/Boolean.php</path>
      <path action="M">Framework/Test/Urg/Type/Float.php</path>
      <path action="M">Framework/Test/Urg/Type/Integer.php</path>
    </paths>
  </logentry>
  <logentry revision="151">
    <author>hywan</author>
    <date>2009-02-10T16:42:36.898942Z</date>
    <msg>Add Ud() and Uc() static method, respectively for discrete and continous uniform distribution combinator.</msg>
    <paths>
      <path action="M">Framework/Test/Urg/Urg.php</path>
    </paths>
  </logentry>
  <logentry revision="150">
    <author>hywan</author>
    <date>2009-02-10T16:22:11.711589Z</date>
    <msg>Remove parent class and add the Randomizable interface.</msg>
    <paths>
      <path action="M">Framework/Test/Urg/Type/Boolean.php</path>
    </paths>
  </logentry>
  <logentry revision="149">
    <author>hywan</author>
    <date>2009-02-05T20:20:07.418146Z</date>
    <msg>Rename Bool to Boolean.</msg>
    <paths>
      <path action="D">Framework/Test/Urg/Type/Bool.php</path>
      <path action="A">Framework/Test/Urg/Type/Boolean.php</path>
    </paths>
  </logentry>
  <logentry revision="148">
    <author>hywan</author>
    <date>2009-02-05T20:19:50.737515Z</date>
    <msg>Remove a bad character and rename Bool to Boolean.</msg>
    <paths>
      <path action="M">Framework/Test/Urg/Type/Bool.php</path>
    </paths>
  </logentry>
  <logentry revision="147">
    <author>hywan</author>
    <date>2009-02-05T20:13:13.734620Z</date>
    <msg>Add new types.</msg>
    <paths>
      <path action="M">Framework/Test/Urg/Type/Bool.php</path>
      <path action="A">Framework/Test/Urg/Type/BoundFloat.php</path>
      <path action="A">Framework/Test/Urg/Type/EvenInteger.php</path>
      <path action="A">Framework/Test/Urg/Type/NegativeFloat.php</path>
      <path action="A">Framework/Test/Urg/Type/OddInteger.php</path>
      <path action="A">Framework/Test/Urg/Type/PositiveFloat.php</path>
      <path action="A">Framework/Test/Urg/Type/ZeroOrNegativeFloat.php</path>
      <path action="A">Framework/Test/Urg/Type/ZeroOrPositiveFloat.php</path>
    </paths>
  </logentry>
  <logentry revision="146">
    <author>hywan</author>
    <date>2009-02-05T20:12:54.923249Z</date>
    <msg>Edit API documentation.</msg>
    <paths>
      <path action="M">Framework/Test/Urg/Type/ZeroOrNegativeInteger.php</path>
      <path action="M">Framework/Test/Urg/Type/ZeroOrPositiveInteger.php</path>
    </paths>
  </logentry>
  <logentry revision="145">
    <author>hywan</author>
    <date>2009-02-05T20:06:41.330856Z</date>
    <msg>Edit API documentation.</msg>
    <paths>
      <path action="M">Framework/Test/Urg/Type/PositiveInteger.php</path>
    </paths>
  </logentry>
  <logentry revision="144">
    <author>hywan</author>
    <date>2009-02-05T19:59:46.572271Z</date>
    <msg>Add Julien's e-mail address.</msg>
    <paths>
      <path action="M">Framework/Test/Urg/Type/BoundInteger.php</path>
      <path action="M">Framework/Test/Urg/Type/Exception.php</path>
      <path action="M">Framework/Test/Urg/Type/Float.php</path>
      <path action="M">Framework/Test/Urg/Type/Integer.php</path>
      <path action="M">Framework/Test/Urg/Type/NegativeInteger.php</path>
      <path action="M">Framework/Test/Urg/Type/Number.php</path>
      <path action="M">Framework/Test/Urg/Type/PositiveInteger.php</path>
      <path action="M">Framework/Test/Urg/Type/ZeroOrNegativeInteger.php</path>
      <path action="M">Framework/Test/Urg/Type/ZeroOrPositiveInteger.php</path>
    </paths>
  </logentry>
  <logentry revision="143">
    <author>hywan</author>
    <date>2009-02-03T19:14:42.105900Z</date>
    <msg>Delete constructor in Number, and rewrite constructors in Integer and Float (was very tired when written this …).</msg>
    <paths>
      <path action="M">Framework/Test/Urg/Type/Float.php</path>
      <path action="M">Framework/Test/Urg/Type/Integer.php</path>
      <path action="M">Framework/Test/Urg/Type/Number.php</path>
    </paths>
  </logentry>
  <logentry revision="142">
    <author>hywan</author>
    <date>2009-02-03T01:46:53.211010Z</date>
    <msg>Bad test in “predicate loop”.</msg>
    <paths>
      <path action="M">Framework/Test/Urg/Type/Float.php</path>
      <path action="M">Framework/Test/Urg/Type/Integer.php</path>
    </paths>
  </logentry>
  <logentry revision="141">
    <author>hywan</author>
    <date>2009-02-03T01:41:59.186678Z</date>
    <msg>Add and write new types.</msg>
    <paths>
      <path action="M">Framework/Test/Urg/Type/BoundInteger.php</path>
      <path action="M">Framework/Test/Urg/Type/Float.php</path>
      <path action="M">Framework/Test/Urg/Type/Integer.php</path>
      <path action="A">Framework/Test/Urg/Type/NegativeInteger.php</path>
      <path action="A">Framework/Test/Urg/Type/Number.php</path>
      <path action="A">Framework/Test/Urg/Type/PositiveInteger.php</path>
      <path action="D">Framework/Test/Urg/Type/Type.php</path>
      <path action="A">Framework/Test/Urg/Type/ZeroOrNegativeInteger.php</path>
      <path action="A">Framework/Test/Urg/Type/ZeroOrPositiveInteger.php</path>
    </paths>
  </logentry>
  <logentry revision="140">
    <author>hywan</author>
    <date>2009-02-03T01:41:43.740481Z</date>
    <msg>Edit the API documentation.</msg>
    <paths>
      <path action="M">Framework/Test/Urg/Type/Interface/Randomizable.php</path>
    </paths>
  </logentry>
  <logentry revision="139">
    <author>hywan</author>
    <date>2009-02-03T01:40:49.152105Z</date>
    <msg>Add the test.predicate.maxtry parameter. Maybe it wil be very usefull.</msg>
    <paths>
      <path action="M">Framework/Test/Test.php</path>
    </paths>
  </logentry>
  <logentry revision="138">
    <author>hywan</author>
    <date>2009-01-30T01:03:19.534548Z</date>
    <msg>Implement the comment tags parser (a simple test).</msg>
    <paths>
      <path action="M">Framework/Test/Oracle/Eyes.php</path>
    </paths>
  </logentry>
  <logentry revision="137">
    <author>hywan</author>
    <date>2009-01-30T01:02:39.130788Z</date>
    <msg>Add the getComment() method to rebuilt a comment. And parse comment tags if and only if it's a documentation comment.</msg>
    <paths>
      <path action="M">Framework/Pom/Token/Comment.php</path>
    </paths>
  </logentry>
  <logentry revision="136">
    <author>hywan</author>
    <date>2009-01-30T00:50:49.158214Z</date>
    <msg>Correct a typo in the API documentation.</msg>
    <paths>
      <path action="M">Framework/Framework.php</path>
    </paths>
  </logentry>
  <logentry revision="135">
    <author>hywan</author>
    <date>2009-01-30T00:41:37.593591Z</date>
    <msg>Mania : formatting spaces.</msg>
    <paths>
      <path action="M">Framework/Graph/AdjacencyList.php</path>
      <path action="M">Framework/Graph/Graph.php</path>
    </paths>
  </logentry>
  <logentry revision="134">
    <author>hywan</author>
    <date>2009-01-29T18:02:01.347931Z</date>
    <msg>Start the Hoa_Test package :-).</msg>
    <paths>
      <path action="A">Framework/Test</path>
      <path action="A">Framework/Test/Exception.php</path>
      <path action="A">Framework/Test/Oracle</path>
      <path action="A">Framework/Test/Oracle/Exception.php</path>
      <path action="A">Framework/Test/Oracle/Eyes.php</path>
      <path action="A">Framework/Test/Oracle/Oracle.php</path>
      <path action="A">Framework/Test/Request.php</path>
      <path action="A">Framework/Test/Test.php</path>
      <path action="A">Framework/Test/Urg</path>
      <path action="A">Framework/Test/Urg/Exception.php</path>
      <path action="A">Framework/Test/Urg/Type</path>
      <path action="A">Framework/Test/Urg/Type/Bool.php</path>
      <path action="A">Framework/Test/Urg/Type/BoundInteger.php</path>
      <path action="A">Framework/Test/Urg/Type/Exception.php</path>
      <path action="A">Framework/Test/Urg/Type/Float.php</path>
      <path action="A">Framework/Test/Urg/Type/Integer.php</path>
      <path action="A">Framework/Test/Urg/Type/Interface</path>
      <path action="A">Framework/Test/Urg/Type/Interface/Predicable.php</path>
      <path action="A">Framework/Test/Urg/Type/Interface/Randomizable.php</path>
      <path action="A">Framework/Test/Urg/Type/String.php</path>
      <path action="A">Framework/Test/Urg/Type/Type.php</path>
      <path action="A">Framework/Test/Urg/Urg.php</path>
    </paths>
  </logentry>
  <logentry revision="133">
    <author>hywan</author>
    <date>2009-01-29T18:01:33.267823Z</date>
    <msg>Correct an API typo.</msg>
    <paths>
      <path action="M">Framework/Console/Router.php</path>
    </paths>
  </logentry>
  <logentry revision="132">
    <author>hywan</author>
    <date>2009-01-29T18:01:07.518211Z</date>
    <msg>Add constants TOKENIZE_* (aliases for Hoa_Pom_Parser_Lexer::*).</msg>
    <paths>
      <path action="M">Framework/Pom/Pom.php</path>
    </paths>
  </logentry>
  <logentry revision="130">
    <author>hywan</author>
    <date>2009-01-26T23:42:56.120967Z</date>
    <msg>More intuitive behavior for the toJson() method.</msg>
    <paths>
      <path action="M">Framework/Json/Json.php</path>
    </paths>
  </logentry>
  <logentry revision="128">
    <author>hywan</author>
    <date>2009-01-26T18:50:39.780520Z</date>
    <msg>Change a returned default value in hasError() method, and change a test in consequence.</msg>
    <paths>
      <path action="M">Framework/Json/Json.php</path>
    </paths>
  </logentry>
  <logentry revision="126">
    <author>hywan</author>
    <date>2009-01-25T17:29:33.418188Z</date>
    <msg>Add parentheses in a new declaration.</msg>
    <paths>
      <path action="M">Framework/StdClass/Util.php</path>
    </paths>
  </logentry>
  <logentry revision="125">
    <author>hywan</author>
    <date>2009-01-25T16:17:53.420625Z</date>
    <msg>Edit __isset() method : replace isset() by array_key_exists(), better if value is set to null.</msg>
    <paths>
      <path action="M">Framework/StdClass/StdClass.php</path>
    </paths>
  </logentry>
  <logentry revision="122">
    <author>hywan</author>
    <date>2009-01-25T15:25:08.294848Z</date>
    <msg>Add the new Hoa_Json package.</msg>
    <paths>
      <path action="A">Framework/Json</path>
      <path action="A">Framework/Json/Exception.php</path>
      <path action="A">Framework/Json/Json.php</path>
    </paths>
  </logentry>
  <logentry revision="121">
    <author>hywan</author>
    <date>2009-01-25T15:23:37.136068Z</date>
    <msg>Add isEmpty() method, remove a debug test (oops …), manage an empty tree in toArray() method, correct a bad method call in toBool() method, ensure compatibility with Hoa_Json in adding a default argument to toJson() method.</msg>
    <paths>
      <path action="M">Framework/StdClass/StdClass.php</path>
    </paths>
  </logentry>
  <logentry revision="120">
    <author>hywan</author>
    <date>2009-01-25T15:07:18.838524Z</date>
    <msg>Manage a null tree, edit to*() methods (more logical results when calling these methods on nodes) and add the toJson() method.</msg>
    <paths>
      <path action="M">Framework/StdClass/StdClass.php</path>
    </paths>
  </logentry>
  <logentry revision="119">
    <author>hywan</author>
    <date>2009-01-24T21:40:43.645505Z</date>
    <msg>Less memory used, quicker access, better recursion management, add ArrayAccess interface … Spring cleaning ;-).</msg>
    <paths>
      <path action="M">Framework/StdClass/StdClass.php</path>
    </paths>
  </logentry>
  <logentry revision="118">
    <author>hywan</author>
    <date>2009-01-24T21:34:12.568509Z</date>
    <msg>Add parentheses to a new declaration.</msg>
    <paths>
      <path action="M">Framework/StdClass/Util.php</path>
    </paths>
  </logentry>
  <logentry revision="117">
    <author>hywan</author>
    <date>2009-01-24T20:02:52.136015Z</date>
    <msg>Formatting API documentation.</msg>
    <paths>
      <path action="M">Framework/Iterator/Iterator.php</path>
    </paths>
  </logentry>
  <logentry revision="116">
    <author>hywan</author>
    <date>2009-01-24T15:49:15.086539Z</date>
    <msg>Correct a “bug” with empty( = 0) or empty( = '0') that returns true …</msg>
    <paths>
      <path action="M">Framework/Validate/Empty.php</path>
    </paths>
  </logentry>
  <logentry revision="115">
    <author>hywan</author>
    <date>2009-01-24T15:38:52.024397Z</date>
    <msg>Ensure compatibility with YAML form declaration.</msg>
    <paths>
      <path action="M">Framework/Filter/Filter.php</path>
    </paths>
  </logentry>
  <logentry revision="114">
    <author>hywan</author>
    <date>2009-01-24T15:32:54.590487Z</date>
    <msg>Correct exception messages.</msg>
    <paths>
      <path action="M">Framework/Form/Element/Abstract.php</path>
    </paths>
  </logentry>
  <logentry revision="113">
    <author>hywan</author>
    <date>2009-01-24T15:21:35.479349Z</date>
    <msg>Ensure compatibility with YAML form declaration.</msg>
    <paths>
      <path action="M">Framework/Validate/Validate.php</path>
    </paths>
  </logentry>
  <logentry revision="112">
    <author>hywan</author>
    <date>2009-01-22T19:23:04.107031Z</date>
    <msg>Implement the new files structure.</msg>
    <paths>
      <path action="M">Framework/Pom/Parser.php</path>
      <path action="M">Framework/Pom/Parser/ParserLr.php</path>
      <path action="M">Framework/Pom/Pom.php</path>
    </paths>
  </logentry>
  <logentry revision="111">
    <author>hywan</author>
    <date>2009-01-22T19:18:33.797990Z</date>
    <msg>And change classnames.</msg>
    <paths>
      <path action="M">Framework/Pom/Dumper.php</path>
      <path action="M">Framework/Pom/Parser/Lexer.php</path>
      <path action="M">Framework/Pom/Parser/ParserLr.php</path>
    </paths>
  </logentry>
  <logentry revision="110">
    <author>hywan</author>
    <date>2009-01-22T19:16:53.172678Z</date>
    <msg>Change some filenames.</msg>
    <paths>
      <path action="D">Framework/Pom/Builder.php</path>
      <path action="A">Framework/Pom/Dumper.php</path>
      <path action="D">Framework/Pom/Parser/LR.php</path>
      <path action="A">Framework/Pom/Parser/Lexer.php</path>
      <path action="A">Framework/Pom/Parser/ParserLr.php</path>
      <path action="D">Framework/Pom/Parser/Token.php</path>
    </paths>
  </logentry>
  <logentry revision="109">
    <author>hywan</author>
    <date>2009-01-22T19:11:46.844318Z</date>
    <msg>Forget to change entry file class name.</msg>
    <paths>
      <path action="A">Framework/Pom/Pom.php</path>
      <path action="D">Framework/Pom/Tokenizer.php</path>
    </paths>
  </logentry>
  <logentry revision="108">
    <author>hywan</author>
    <date>2009-01-22T19:10:23.064602Z</date>
    <msg>Delete Tokenizer package.</msg>
    <paths>
      <path action="D">Framework/Tokenizer</path>
    </paths>
  </logentry>
  <logentry revision="107">
    <author>hywan</author>
    <date>2009-01-22T19:09:11.819664Z</date>
    <msg>Change package name : Tokenizer -&amp;gt; Pom.</msg>
    <paths>
      <path action="A">Framework/Pom</path>
      <path action="R">Framework/Pom/Builder.php</path>
      <path action="R">Framework/Pom/Exception.php</path>
      <path action="A">Framework/Pom/NOTE</path>
      <path action="A">Framework/Pom/Parser</path>
      <path action="R">Framework/Pom/Parser.php</path>
      <path action="R">Framework/Pom/Parser/Exception.php</path>
      <path action="R">Framework/Pom/Parser/LR.php</path>
      <path action="R">Framework/Pom/Parser/Token.php</path>
      <path action="R">Framework/Pom/Plugin/Exception.php</path>
      <path action="R">Framework/Pom/Plugin/Interface.php</path>
      <path action="R">Framework/Pom/Style/Exception.php</path>
      <path action="R">Framework/Pom/Style/Interface.php</path>
      <path action="R">Framework/Pom/Style/Null.php</path>
      <path action="R">Framework/Pom/Token/Array.php</path>
      <path action="R">Framework/Pom/Token/Call.php</path>
      <path action="R">Framework/Pom/Token/Call/Attribute.php</path>
      <path action="R">Framework/Pom/Token/Call/ClassConstant.php</path>
      <path action="R">Framework/Pom/Token/Call/Function.php</path>
      <path action="R">Framework/Pom/Token/Call/Method.php</path>
      <path action="R">Framework/Pom/Token/Call/StaticAttribute.php</path>
      <path action="R">Framework/Pom/Token/Call/StaticMethod.php</path>
      <path action="R">Framework/Pom/Token/Cast.php</path>
      <path action="R">Framework/Pom/Token/Class.php</path>
      <path action="R">Framework/Pom/Token/Class/Access.php</path>
      <path action="R">Framework/Pom/Token/Class/Attribute.php</path>
      <path action="R">Framework/Pom/Token/Class/Constant.php</path>
      <path action="R">Framework/Pom/Token/Class/Method.php</path>
      <path action="R">Framework/Pom/Token/Clone.php</path>
      <path action="R">Framework/Pom/Token/Comment.php</path>
      <path action="R">Framework/Pom/Token/ControlStructure.php</path>
      <path action="A">Framework/Pom/Token/ControlStructure/Break.php</path>
      <path action="A">Framework/Pom/Token/ControlStructure/Conditional</path>
      <path action="A">Framework/Pom/Token/ControlStructure/Conditional.php</path>
      <path action="R">Framework/Pom/Token/ControlStructure/Conditional/If.php</path>
      <path action="R">Framework/Pom/Token/ControlStructure/Conditional/If/Else.php</path>
      <path action="R">Framework/Pom/Token/ControlStructure/Conditional/If/Elseif.php</path>
      <path action="R">Framework/Pom/Token/ControlStructure/Conditional/If/If.php</path>
      <path action="R">Framework/Pom/Token/ControlStructure/Conditional/Switch.php</path>
      <path action="R">Framework/Pom/Token/ControlStructure/Conditional/Switch/Case.php</path>
      <path action="R">Framework/Pom/Token/ControlStructure/Conditional/Switch/Default.php</path>
      <path action="A">Framework/Pom/Token/ControlStructure/Continue.php</path>
      <path action="A">Framework/Pom/Token/ControlStructure/Declarative.php</path>
      <path action="A">Framework/Pom/Token/ControlStructure/Goto.php</path>
      <path action="A">Framework/Pom/Token/ControlStructure/Import</path>
      <path action="A">Framework/Pom/Token/ControlStructure/Import.php</path>
      <path action="R">Framework/Pom/Token/ControlStructure/Import/Include.php</path>
      <path action="R">Framework/Pom/Token/ControlStructure/Import/IncludeOnce.php</path>
      <path action="R">Framework/Pom/Token/ControlStructure/Import/Require.php</path>
      <path action="R">Framework/Pom/Token/ControlStructure/Import/RequireOnce.php</path>
      <path action="A">Framework/Pom/Token/ControlStructure/Loop</path>
      <path action="A">Framework/Pom/Token/ControlStructure/Loop.php</path>
      <path action="R">Framework/Pom/Token/ControlStructure/Loop/DoWhile.php</path>
      <path action="R">Framework/Pom/Token/ControlStructure/Loop/For.php</path>
      <path action="R">Framework/Pom/Token/ControlStructure/Loop/Foreach.php</path>
      <path action="R">Framework/Pom/Token/ControlStructure/Loop/While.php</path>
      <path action="A">Framework/Pom/Token/ControlStructure/Return.php</path>
      <path action="A">Framework/Pom/Token/ControlStructure/TERNARY</path>
      <path action="A">Framework/Pom/Token/ControlStructure/TryCatch</path>
      <path action="A">Framework/Pom/Token/ControlStructure/TryCatch.php</path>
      <path action="R">Framework/Pom/Token/ControlStructure/TryCatch/Catch.php</path>
      <path action="R">Framework/Pom/Token/ControlStructure/TryCatch/Try.php</path>
      <path action="R">Framework/Pom/Token/Exception.php</path>
      <path action="R">Framework/Pom/Token/Function.php</path>
      <path action="R">Framework/Pom/Token/Function/Argument.php</path>
      <path action="R">Framework/Pom/Token/Function/Named.php</path>
      <path action="A">Framework/Pom/Token/Instruction</path>
      <path action="A">Framework/Pom/Token/Instruction.php</path>
      <path action="R">Framework/Pom/Token/Instruction/Block.php</path>
      <path action="R">Framework/Pom/Token/Interface.php</path>
      <path action="R">Framework/Pom/Token/New.php</path>
      <path action="R">Framework/Pom/Token/Number.php</path>
      <path action="R">Framework/Pom/Token/Number/DNumber.php</path>
      <path action="R">Framework/Pom/Token/Number/LNumber.php</path>
      <path action="A">Framework/Pom/Token/Operation.php</path>
      <path action="R">Framework/Pom/Token/Operator.php</path>
      <path action="A">Framework/Pom/Token/Operator/Arithmetical.php</path>
      <path action="D">Framework/Pom/Token/Operator/Assign.php</path>
      <path action="A">Framework/Pom/Token/Operator/Assignement.php</path>
      <path action="A">Framework/Pom/Token/Operator/Bitwise.php</path>
      <path action="R">Framework/Pom/Token/Operator/Comparison.php</path>
      <path action="A">Framework/Pom/Token/Operator/ErrorControl.php</path>
      <path action="A">Framework/Pom/Token/Operator/Execution.php</path>
      <path action="A">Framework/Pom/Token/Operator/InDeCrementing.php</path>
      <path action="D">Framework/Pom/Token/Operator/Logic.php</path>
      <path action="A">Framework/Pom/Token/Operator/Logical.php</path>
      <path action="A">Framework/Pom/Token/Operator/String.php</path>
      <path action="A">Framework/Pom/Token/Operator/Type.php</path>
      <path action="R">Framework/Pom/Token/OutterPhp.php</path>
      <path action="A">Framework/Pom/Token/Root.php</path>
      <path action="R">Framework/Pom/Token/String.php</path>
      <path action="R">Framework/Pom/Token/String/Boolean.php</path>
      <path action="R">Framework/Pom/Token/String/Constant.php</path>
      <path action="D">Framework/Pom/Token/String/Encapsed.php</path>
      <path action="R">Framework/Pom/Token/String/EncapsedConstant.php</path>
      <path action="R">Framework/Pom/Token/String/Null.php</path>
      <path action="R">Framework/Pom/Token/Util/Exception.php</path>
      <path action="A">Framework/Pom/Token/Util/Interface</path>
      <path action="D">Framework/Pom/Token/Util/Interface.php</path>
      <path action="R">Framework/Pom/Token/Util/Interface/Scalar.php</path>
      <path action="R">Framework/Pom/Token/Util/Interface/SuperScalar.php</path>
      <path action="R">Framework/Pom/Token/Util/Interface/Tokenizable.php</path>
      <path action="R">Framework/Pom/Token/Util/Interface/Type.php</path>
      <path action="D">Framework/Pom/Token/Variable</path>
      <path action="R">Framework/Pom/Token/Variable.php</path>
      <path action="R">Framework/Pom/Token/Whitespace.php</path>
      <path action="R">Framework/Pom/Tokenizer.php</path>
      <path action="D">Framework/Tokenizer/Builder.php</path>
      <path action="D">Framework/Tokenizer/Exception.php</path>
      <path action="D">Framework/Tokenizer/NOTE</path>
      <path action="D">Framework/Tokenizer/Parser</path>
      <path action="D">Framework/Tokenizer/Parser.php</path>
      <path action="D">Framework/Tokenizer/Plugin</path>
      <path action="D">Framework/Tokenizer/Style</path>
      <path action="D">Framework/Tokenizer/Token</path>
      <path action="D">Framework/Tokenizer/Tokenizer.php</path>
    </paths>
  </logentry>
  <logentry revision="106">
    <author>hywan</author>
    <date>2009-01-22T19:05:06.155277Z</date>
    <msg>Add my notes.</msg>
    <paths>
      <path action="A">Framework/Tokenizer/NOTE</path>
    </paths>
  </logentry>
  <logentry revision="105">
    <author>hywan</author>
    <date>2009-01-22T19:04:25.940377Z</date>
    <msg>Change package name : Tokenizer -&amp;gt; Pom.</msg>
    <paths>
      <path action="M">Framework/Tokenizer/Builder.php</path>
      <path action="M">Framework/Tokenizer/Exception.php</path>
      <path action="M">Framework/Tokenizer/Parser.php</path>
      <path action="M">Framework/Tokenizer/Parser/Exception.php</path>
      <path action="M">Framework/Tokenizer/Parser/LR.php</path>
      <path action="M">Framework/Tokenizer/Parser/Token.php</path>
      <path action="M">Framework/Tokenizer/Plugin/Exception.php</path>
      <path action="M">Framework/Tokenizer/Plugin/Interface.php</path>
      <path action="M">Framework/Tokenizer/Style/Exception.php</path>
      <path action="M">Framework/Tokenizer/Style/Interface.php</path>
      <path action="M">Framework/Tokenizer/Style/Null.php</path>
      <path action="M">Framework/Tokenizer/Token/Array.php</path>
      <path action="M">Framework/Tokenizer/Token/Call.php</path>
      <path action="M">Framework/Tokenizer/Token/Call/Attribute.php</path>
      <path action="M">Framework/Tokenizer/Token/Call/ClassConstant.php</path>
      <path action="M">Framework/Tokenizer/Token/Call/Function.php</path>
      <path action="M">Framework/Tokenizer/Token/Call/Method.php</path>
      <path action="M">Framework/Tokenizer/Token/Call/StaticAttribute.php</path>
      <path action="M">Framework/Tokenizer/Token/Call/StaticMethod.php</path>
      <path action="M">Framework/Tokenizer/Token/Cast.php</path>
      <path action="M">Framework/Tokenizer/Token/Class.php</path>
      <path action="M">Framework/Tokenizer/Token/Class/Access.php</path>
      <path action="M">Framework/Tokenizer/Token/Class/Attribute.php</path>
      <path action="M">Framework/Tokenizer/Token/Class/Constant.php</path>
      <path action="M">Framework/Tokenizer/Token/Class/Method.php</path>
      <path action="M">Framework/Tokenizer/Token/Clone.php</path>
      <path action="M">Framework/Tokenizer/Token/Comment.php</path>
      <path action="M">Framework/Tokenizer/Token/ControlStructure.php</path>
      <path action="M">Framework/Tokenizer/Token/ControlStructure/Break.php</path>
      <path action="M">Framework/Tokenizer/Token/ControlStructure/Conditional.php</path>
      <path action="M">Framework/Tokenizer/Token/ControlStructure/Conditional/If.php</path>
      <path action="M">Framework/Tokenizer/Token/ControlStructure/Conditional/If/Else.php</path>
      <path action="M">Framework/Tokenizer/Token/ControlStructure/Conditional/If/Elseif.php</path>
      <path action="M">Framework/Tokenizer/Token/ControlStructure/Conditional/If/If.php</path>
      <path action="M">Framework/Tokenizer/Token/ControlStructure/Conditional/Switch.php</path>
      <path action="M">Framework/Tokenizer/Token/ControlStructure/Conditional/Switch/Case.php</path>
      <path action="M">Framework/Tokenizer/Token/ControlStructure/Conditional/Switch/Default.php</path>
      <path action="M">Framework/Tokenizer/Token/ControlStructure/Continue.php</path>
      <path action="M">Framework/Tokenizer/Token/ControlStructure/Import.php</path>
      <path action="M">Framework/Tokenizer/Token/ControlStructure/Import/Include.php</path>
      <path action="M">Framework/Tokenizer/Token/ControlStructure/Import/IncludeOnce.php</path>
      <path action="M">Framework/Tokenizer/Token/ControlStructure/Import/Require.php</path>
      <path action="M">Framework/Tokenizer/Token/ControlStructure/Import/RequireOnce.php</path>
      <path action="M">Framework/Tokenizer/Token/ControlStructure/Loop.php</path>
      <path action="M">Framework/Tokenizer/Token/ControlStructure/Loop/DoWhile.php</path>
      <path action="M">Framework/Tokenizer/Token/ControlStructure/Loop/For.php</path>
      <path action="M">Framework/Tokenizer/Token/ControlStructure/Loop/Foreach.php</path>
      <path action="M">Framework/Tokenizer/Token/ControlStructure/Loop/While.php</path>
      <path action="M">Framework/Tokenizer/Token/ControlStructure/Return.php</path>
      <path action="M">Framework/Tokenizer/Token/ControlStructure/TryCatch.php</path>
      <path action="M">Framework/Tokenizer/Token/ControlStructure/TryCatch/Catch.php</path>
      <path action="M">Framework/Tokenizer/Token/ControlStructure/TryCatch/Try.php</path>
      <path action="M">Framework/Tokenizer/Token/Exception.php</path>
      <path action="M">Framework/Tokenizer/Token/Function.php</path>
      <path action="M">Framework/Tokenizer/Token/Function/Argument.php</path>
      <path action="M">Framework/Tokenizer/Token/Function/Named.php</path>
      <path action="M">Framework/Tokenizer/Token/Instruction.php</path>
      <path action="M">Framework/Tokenizer/Token/Instruction/Block.php</path>
      <path action="M">Framework/Tokenizer/Token/Interface.php</path>
      <path action="M">Framework/Tokenizer/Token/New.php</path>
      <path action="M">Framework/Tokenizer/Token/Number.php</path>
      <path action="M">Framework/Tokenizer/Token/Number/DNumber.php</path>
      <path action="M">Framework/Tokenizer/Token/Number/LNumber.php</path>
      <path action="M">Framework/Tokenizer/Token/Operation.php</path>
      <path action="M">Framework/Tokenizer/Token/Operator.php</path>
      <path action="M">Framework/Tokenizer/Token/Operator/Arithmetical.php</path>
      <path action="M">Framework/Tokenizer/Token/Operator/Assignement.php</path>
      <path action="M">Framework/Tokenizer/Token/Operator/Bitwise.php</path>
      <path action="M">Framework/Tokenizer/Token/Operator/Comparison.php</path>
      <path action="M">Framework/Tokenizer/Token/Operator/ErrorControl.php</path>
      <path action="M">Framework/Tokenizer/Token/Operator/Execution.php</path>
      <path action="M">Framework/Tokenizer/Token/Operator/InDeCrementing.php</path>
      <path action="M">Framework/Tokenizer/Token/Operator/Logical.php</path>
      <path action="M">Framework/Tokenizer/Token/Operator/String.php</path>
      <path action="M">Framework/Tokenizer/Token/Operator/Type.php</path>
      <path action="M">Framework/Tokenizer/Token/OutterPhp.php</path>
      <path action="M">Framework/Tokenizer/Token/Root.php</path>
      <path action="M">Framework/Tokenizer/Token/String.php</path>
      <path action="M">Framework/Tokenizer/Token/String/Boolean.php</path>
      <path action="M">Framework/Tokenizer/Token/String/Constant.php</path>
      <path action="M">Framework/Tokenizer/Token/String/EncapsedConstant.php</path>
      <path action="M">Framework/Tokenizer/Token/String/Null.php</path>
      <path action="M">Framework/Tokenizer/Token/Util/Exception.php</path>
      <path action="M">Framework/Tokenizer/Token/Util/Interface/Scalar.php</path>
      <path action="M">Framework/Tokenizer/Token/Util/Interface/SuperScalar.php</path>
      <path action="M">Framework/Tokenizer/Token/Util/Interface/Tokenizable.php</path>
      <path action="M">Framework/Tokenizer/Token/Util/Interface/Type.php</path>
      <path action="M">Framework/Tokenizer/Token/Variable.php</path>
      <path action="M">Framework/Tokenizer/Token/Whitespace.php</path>
      <path action="M">Framework/Tokenizer/Tokenizer.php</path>
    </paths>
  </logentry>
  <logentry revision="104">
    <author>hywan</author>
    <date>2009-01-22T17:50:29.154128Z</date>
    <msg>Mania : formatting spaces.</msg>
    <paths>
      <path action="M">Framework/Framework.php</path>
    </paths>
  </logentry>
  <logentry revision="103">
    <author>hywan</author>
    <date>2009-01-22T17:49:44.031773Z</date>
    <msg>Parse classes and functions \!</msg>
    <paths>
      <path action="M">Framework/Tokenizer/Parser/LR.php</path>
    </paths>
  </logentry>
  <logentry revision="102">
    <author>hywan</author>
    <date>2009-01-22T17:48:04.035514Z</date>
    <msg>Add the public getRoot() method.</msg>
    <paths>
      <path action="M">Framework/Tokenizer/Parser.php</path>
    </paths>
  </logentry>
  <logentry revision="101">
    <author>hywan</author>
    <date>2009-01-22T17:47:42.153572Z</date>
    <msg>Temporary : return the root of object model and not tokens.</msg>
    <paths>
      <path action="M">Framework/Tokenizer/Tokenizer.php</path>
    </paths>
  </logentry>
  <logentry revision="100">
    <author>hywan</author>
    <date>2009-01-22T17:46:28.962784Z</date>
    <msg>Add static properties.</msg>
    <paths>
      <path action="M">Framework/Tokenizer/Token/Class/Method.php</path>
    </paths>
  </logentry>
  <logentry revision="99">
    <author>hywan</author>
    <date>2009-01-22T17:44:59.997682Z</date>
    <msg>Cannot have an implementing abstract method from an interface.</msg>
    <paths>
      <path action="M">Framework/Tokenizer/Token/Call.php</path>
    </paths>
  </logentry>
  <logentry revision="97">
    <author>hywan</author>
    <date>2009-01-21T18:24:59.641017Z</date>
    <msg>Continue the parser (new methodology for control methods, and start to parse class and function).</msg>
    <paths>
      <path action="M">Framework/Tokenizer/Parser.php</path>
      <path action="M">Framework/Tokenizer/Parser/LR.php</path>
    </paths>
  </logentry>
  <logentry revision="96">
    <author>hywan</author>
    <date>2009-01-21T18:24:06.784509Z</date>
    <msg>Remove CONTEXT_* class constants (useless).</msg>
    <paths>
      <path action="M">Framework/Tokenizer/Tokenizer.php</path>
    </paths>
  </logentry>
  <logentry revision="95">
    <author>hywan</author>
    <date>2009-01-21T18:23:33.394727Z</date>
    <msg>Forget the static statement. Correct a syntax error in tokenize() method.</msg>
    <paths>
      <path action="M">Framework/Tokenizer/Token/Class/Attribute.php</path>
    </paths>
  </logentry>
  <logentry revision="94">
    <author>hywan</author>
    <date>2009-01-21T18:22:48.280700Z</date>
    <msg>Correct a typo : constante -&amp;gt; constant.</msg>
    <paths>
      <path action="M">Framework/Tokenizer/Token/Call/ClassConstant.php</path>
    </paths>
  </logentry>
  <logentry revision="93">
    <author>hywan</author>
    <date>2009-01-21T18:22:10.182599Z</date>
    <msg>Forget to add “function” keyword in the tokenize() method.</msg>
    <paths>
      <path action="M">Framework/Tokenizer/Token/Function/Named.php</path>
    </paths>
  </logentry>
  <logentry revision="92">
    <author>hywan</author>
    <date>2009-01-21T18:21:05.468968Z</date>
    <msg>Correct import (bad class name/path). Correct tokenize() method.</msg>
    <paths>
      <path action="M">Framework/Tokenizer/Token/Function/Argument.php</path>
    </paths>
  </logentry>
  <logentry revision="91">
    <author>hywan</author>
    <date>2009-01-19T02:45:47.575636Z</date>
    <msg>Just write the axiom() method, nothing really important …</msg>
    <paths>
      <path action="M">Framework/Tokenizer/Parser/LR.php</path>
    </paths>
  </logentry>
  <logentry revision="90">
    <author>hywan</author>
    <date>2009-01-19T02:45:10.776959Z</date>
    <msg>Add parser controls (very usefull to “match” with a grammar).</msg>
    <paths>
      <path action="M">Framework/Tokenizer/Parser.php</path>
    </paths>
  </logentry>
  <logentry revision="89">
    <author>hywan</author>
    <date>2009-01-18T23:59:37.871447Z</date>
    <msg>Adapt code to the new parser.</msg>
    <paths>
      <path action="M">Framework/Tokenizer/Tokenizer.php</path>
    </paths>
  </logentry>
  <logentry revision="88">
    <author>hywan</author>
    <date>2009-01-18T23:59:00.631361Z</date>
    <msg>Start the parser (maybe LR parser).</msg>
    <paths>
      <path action="A">Framework/Tokenizer/Parser</path>
      <path action="M">Framework/Tokenizer/Parser.php</path>
      <path action="A">Framework/Tokenizer/Parser/Exception.php</path>
      <path action="A">Framework/Tokenizer/Parser/LR.php</path>
      <path action="A">Framework/Tokenizer/Parser/Token.php</path>
    </paths>
  </logentry>
  <logentry revision="87">
    <author>hywan</author>
    <date>2009-01-18T23:58:34.444029Z</date>
    <msg>Add root element, it is the root of the object model.</msg>
    <paths>
      <path action="A">Framework/Tokenizer/Token/Root.php</path>
    </paths>
  </logentry>
  <logentry revision="86">
    <author>hywan</author>
    <date>2009-01-18T23:12:59.667652Z</date>
    <msg>Resolve a “tokenizer array” problem with depth.</msg>
    <paths>
      <path action="M">Framework/Tokenizer/Token/Call/Function.php</path>
    </paths>
  </logentry>
  <logentry revision="85">
    <author>hywan</author>
    <date>2009-01-18T23:10:58.478766Z</date>
    <msg>Resolve a “tokenizer array” problem with depth.</msg>
    <paths>
      <path action="M">Framework/Tokenizer/Token/Array.php</path>
    </paths>
  </logentry>
  <logentry revision="84">
    <author>hywan</author>
    <date>2009-01-18T22:45:56.130194Z</date>
    <msg>Write the tokenize() method. Resolve an indirect recursion between finalMe() and abstractMe() method. Throw exception when trying to add an already declared constant, attribute or method. Rewrite attributes access (was String, now Variable). Add some usefull has*() methods.</msg>
    <paths>
      <path action="M">Framework/Tokenizer/Token/Class.php</path>
    </paths>
  </logentry>
  <logentry revision="83">
    <author>hywan</author>
    <date>2009-01-18T22:42:53.973703Z</date>
    <msg>Rewrite the tokenize() method : add no-comment case and shift a level when no final or abstract statement are declared. Disable comment of parent for the tokenize() method.</msg>
    <paths>
      <path action="M">Framework/Tokenizer/Token/Class/Method.php</path>
    </paths>
  </logentry>
  <logentry revision="82">
    <author>hywan</author>
    <date>2009-01-18T22:40:51.315817Z</date>
    <msg>Rewrite the tokenize() method : add no-value case, add semi-colon and add no-comment case. Resolve problem with operator (was an old operator name and not well-declared).</msg>
    <paths>
      <path action="M">Framework/Tokenizer/Token/Class/Attribute.php</path>
    </paths>
  </logentry>
  <logentry revision="81">
    <author>hywan</author>
    <date>2009-01-18T22:39:08.612222Z</date>
    <msg>Rewrite the tokenize() method and throw an exception when a constant does not have any value. Import the good operator (was an onld operator name).</msg>
    <paths>
      <path action="M">Framework/Tokenizer/Token/Class/Constant.php</path>
    </paths>
  </logentry>
  <logentry revision="80">
    <author>hywan</author>
    <date>2009-01-18T22:36:46.450344Z</date>
    <msg>Implement Tokenizable interface. Rewrite tokenize() method. Allow to disable comment in tokenize() (e.g. usefull for a method which has his own comment).</msg>
    <paths>
      <path action="M">Framework/Tokenizer/Token/Function/Named.php</path>
    </paths>
  </logentry>
  <logentry revision="79">
    <author>hywan</author>
    <date>2009-01-18T22:35:11.787927Z</date>
    <msg>Move interface Tokenizable to child. Correct a typo in attribute call. Add the hasComment() method.</msg>
    <paths>
      <path action="M">Framework/Tokenizer/Token/Function.php</path>
    </paths>
  </logentry>
  <logentry revision="78">
    <author>hywan</author>
    <date>2009-01-18T21:38:48.228621Z</date>
    <msg>Nevertheless, boolean, constant, encapsed string and null are scalars and types.</msg>
    <paths>
      <path action="M">Framework/Tokenizer/Token/String/Boolean.php</path>
      <path action="M">Framework/Tokenizer/Token/String/Constant.php</path>
      <path action="M">Framework/Tokenizer/Token/String/EncapsedConstant.php</path>
      <path action="M">Framework/Tokenizer/Token/String/Null.php</path>
    </paths>
  </logentry>
  <logentry revision="77">
    <author>hywan</author>
    <date>2009-01-18T21:37:23.770163Z</date>
    <msg>A string is not a scalar or a type.</msg>
    <paths>
      <path action="M">Framework/Tokenizer/Token/String.php</path>
    </paths>
  </logentry>
  <logentry revision="76">
    <author>hywan</author>
    <date>2009-01-18T20:33:48.754843Z</date>
    <msg>Bad regular expression to check if a string is well-formed (forget start and end delimiters, i.e. ^ and $ …).</msg>
    <paths>
      <path action="M">Framework/Tokenizer/Token/String.php</path>
    </paths>
  </logentry>
  <logentry revision="75">
    <author>hywan</author>
    <date>2009-01-18T20:31:18.117157Z</date>
    <msg>Simplify code and exception message treatment.</msg>
    <paths>
      <path action="M">Framework/Tokenizer/Token/String/Null.php</path>
    </paths>
  </logentry>
  <logentry revision="74">
    <author>hywan</author>
    <date>2009-01-18T20:26:31.172191Z</date>
    <msg>Redefine key and value accepting classes.</msg>
    <paths>
      <path action="M">Framework/Tokenizer/Token/Array.php</path>
    </paths>
  </logentry>
  <logentry revision="73">
    <author>hywan</author>
    <date>2009-01-18T20:25:54.279250Z</date>
    <msg>Bad place for implementing an interface, and redefine DNumber pattern.</msg>
    <paths>
      <path action="M">Framework/Tokenizer/Token/Number.php</path>
      <path action="M">Framework/Tokenizer/Token/Number/DNumber.php</path>
      <path action="M">Framework/Tokenizer/Token/Number/LNumber.php</path>
    </paths>
  </logentry>
  <logentry revision="72">
    <author>hywan</author>
    <date>2009-01-18T20:17:57.527134Z</date>
    <msg>Bad tokenizing.</msg>
    <paths>
      <path action="M">Framework/Tokenizer/Token/Array.php</path>
    </paths>
  </logentry>
  <logentry revision="71">
    <author>hywan</author>
    <date>2009-01-18T20:14:38.309889Z</date>
    <msg>Bad constant value.</msg>
    <paths>
      <path action="M">Framework/Tokenizer/Token/Array.php</path>
    </paths>
  </logentry>
  <logentry revision="70">
    <author>hywan</author>
    <date>2009-01-15T17:55:14.367991Z</date>
    <msg>Update key/value control.</msg>
    <paths>
      <path action="M">Framework/Tokenizer/Token/Array.php</path>
    </paths>
  </logentry>
  <logentry revision="69">
    <author>hywan</author>
    <date>2009-01-15T17:54:54.041135Z</date>
    <msg>Bad attribute was called.</msg>
    <paths>
      <path action="M">Framework/Tokenizer/Token/String/EncapsedConstant.php</path>
    </paths>
  </logentry>
  <logentry revision="68">
    <author>hywan</author>
    <date>2009-01-15T17:35:00.323050Z</date>
    <msg>Correct an instanceof (Scalar -&amp;gt; SuperScalar) in isUniformSuperScalar() method.</msg>
    <paths>
      <path action="M">Framework/Tokenizer/Token/Array.php</path>
    </paths>
  </logentry>
  <logentry revision="67">
    <author>hywan</author>
    <date>2009-01-15T17:29:47.012863Z</date>
    <msg>Bad interface name, oops …</msg>
    <paths>
      <path action="M">Framework/Tokenizer/Token/Util/Interface/SuperScalar.php</path>
    </paths>
  </logentry>
  <logentry revision="66">
    <author>hywan</author>
    <date>2009-01-15T14:19:39.715213Z</date>
    <msg>Correct a typo in API documentation.</msg>
    <paths>
      <path action="M">Framework/Tokenizer/Token/Number.php</path>
    </paths>
  </logentry>
  <logentry revision="65">
    <author>hywan</author>
    <date>2009-01-14T15:58:12.739298Z</date>
    <msg>A class and an interface are types.</msg>
    <paths>
      <path action="M">Framework/Tokenizer/Token/Class.php</path>
      <path action="M">Framework/Tokenizer/Token/Interface.php</path>
    </paths>
  </logentry>
  <logentry revision="64">
    <author>hywan</author>
    <date>2009-01-13T18:53:51.497607Z</date>
    <msg>Add the _COLON token.</msg>
    <paths>
      <path action="M">Framework/Tokenizer/Tokenizer.php</path>
    </paths>
  </logentry>
  <logentry revision="63">
    <author>hywan</author>
    <date>2009-01-13T18:52:18.484643Z</date>
    <msg>Not in harmony with the package methodology.</msg>
    <paths>
      <path action="D">Framework/Tokenizer/Token/Variable</path>
    </paths>
  </logentry>
  <logentry revision="62">
    <author>hywan</author>
    <date>2009-01-13T18:49:01.030509Z</date>
    <msg>Not in harmony with the package methodology.</msg>
    <paths>
      <path action="D">Framework/Tokenizer/Token/Variable/Valued.php</path>
    </paths>
  </logentry>
  <logentry revision="61">
    <author>hywan</author>
    <date>2009-01-13T18:48:17.681290Z</date>
    <msg>Add possible operations and correct a typo in an exception message.</msg>
    <paths>
      <path action="M">Framework/Tokenizer/Token/Operation.php</path>
    </paths>
  </logentry>
  <logentry revision="60">
    <author>hywan</author>
    <date>2009-01-13T18:47:19.211445Z</date>
    <msg>Remake the attribute structure. Now it is not based on a valued variable, but based on itself.</msg>
    <paths>
      <path action="M">Framework/Tokenizer/Token/Class/Attribute.php</path>
    </paths>
  </logentry>
  <logentry revision="59">
    <author>hywan</author>
    <date>2009-01-13T18:46:25.903328Z</date>
    <msg>And simple instruction of course …</msg>
    <paths>
      <path action="A">Framework/Tokenizer/Token/Instruction.php</path>
    </paths>
  </logentry>
  <logentry revision="58">
    <author>hywan</author>
    <date>2009-01-13T18:46:00.335323Z</date>
    <msg>Add block instructions management.</msg>
    <paths>
      <path action="A">Framework/Tokenizer/Token/Instruction</path>
      <path action="A">Framework/Tokenizer/Token/Instruction/Block.php</path>
    </paths>
  </logentry>
  <logentry revision="57">
    <author>hywan</author>
    <date>2009-01-13T18:45:32.720610Z</date>
    <msg>Forget to add the Type interface.</msg>
    <paths>
      <path action="M">Framework/Tokenizer/Token/Number.php</path>
      <path action="M">Framework/Tokenizer/Token/String.php</path>
    </paths>
  </logentry>
  <logentry revision="56">
    <author>hywan</author>
    <date>2009-01-13T18:44:58.644350Z</date>
    <msg>Change class name, was not well-named.</msg>
    <paths>
      <path action="M">Framework/Tokenizer/Token/Util/Interface/Tokenizable.php</path>
    </paths>
  </logentry>
  <logentry revision="55">
    <author>hywan</author>
    <date>2009-01-13T18:44:13.069581Z</date>
    <msg>Write control structures (try at least …).</msg>
    <paths>
      <path action="M">Framework/Tokenizer/Token/ControlStructure.php</path>
      <path action="A">Framework/Tokenizer/Token/ControlStructure/Break.php</path>
      <path action="A">Framework/Tokenizer/Token/ControlStructure/Conditional</path>
      <path action="A">Framework/Tokenizer/Token/ControlStructure/Conditional.php</path>
      <path action="A">Framework/Tokenizer/Token/ControlStructure/Conditional/If</path>
      <path action="A">Framework/Tokenizer/Token/ControlStructure/Conditional/If.php</path>
      <path action="A">Framework/Tokenizer/Token/ControlStructure/Conditional/If/Else.php</path>
      <path action="A">Framework/Tokenizer/Token/ControlStructure/Conditional/If/Elseif.php</path>
      <path action="A">Framework/Tokenizer/Token/ControlStructure/Conditional/If/If.php</path>
      <path action="A">Framework/Tokenizer/Token/ControlStructure/Conditional/Switch</path>
      <path action="A">Framework/Tokenizer/Token/ControlStructure/Conditional/Switch.php</path>
      <path action="A">Framework/Tokenizer/Token/ControlStructure/Conditional/Switch/Case.php</path>
      <path action="A">Framework/Tokenizer/Token/ControlStructure/Conditional/Switch/Default.php</path>
      <path action="A">Framework/Tokenizer/Token/ControlStructure/Continue.php</path>
      <path action="A">Framework/Tokenizer/Token/ControlStructure/Declarative.php</path>
      <path action="A">Framework/Tokenizer/Token/ControlStructure/Goto.php</path>
      <path action="A">Framework/Tokenizer/Token/ControlStructure/Import</path>
      <path action="A">Framework/Tokenizer/Token/ControlStructure/Import.php</path>
      <path action="A">Framework/Tokenizer/Token/ControlStructure/Import/Include.php</path>
      <path action="A">Framework/Tokenizer/Token/ControlStructure/Import/IncludeOnce.php</path>
      <path action="A">Framework/Tokenizer/Token/ControlStructure/Import/Require.php</path>
      <path action="A">Framework/Tokenizer/Token/ControlStructure/Import/RequireOnce.php</path>
      <path action="A">Framework/Tokenizer/Token/ControlStructure/Loop</path>
      <path action="A">Framework/Tokenizer/Token/ControlStructure/Loop.php</path>
      <path action="A">Framework/Tokenizer/Token/ControlStructure/Loop/DoWhile.php</path>
      <path action="A">Framework/Tokenizer/Token/ControlStructure/Loop/For.php</path>
      <path action="A">Framework/Tokenizer/Token/ControlStructure/Loop/Foreach.php</path>
      <path action="A">Framework/Tokenizer/Token/ControlStructure/Loop/While.php</path>
      <path action="A">Framework/Tokenizer/Token/ControlStructure/Return.php</path>
      <path action="A">Framework/Tokenizer/Token/ControlStructure/TERNARY</path>
      <path action="A">Framework/Tokenizer/Token/ControlStructure/TryCatch</path>
      <path action="A">Framework/Tokenizer/Token/ControlStructure/TryCatch.php</path>
      <path action="A">Framework/Tokenizer/Token/ControlStructure/TryCatch/Catch.php</path>
      <path action="A">Framework/Tokenizer/Token/ControlStructure/TryCatch/Try.php</path>
    </paths>
  </logentry>
  <logentry revision="54">
    <author>hywan</author>
    <date>2009-01-13T12:47:54.216764Z</date>
    <msg>Mania : formatting spaces.</msg>
    <paths>
      <path action="M">Framework/Acl/Acl.php</path>
      <path action="M">Framework/Acl/Group.php</path>
      <path action="M">Framework/Acl/Resource.php</path>
      <path action="M">Framework/Acl/User.php</path>
      <path action="M">Framework/Console/Console.php</path>
      <path action="M">Framework/Console/Core/Cli.php</path>
      <path action="M">Framework/Console/Dispatcher.php</path>
      <path action="M">Framework/Controller/Action/Standard.php</path>
      <path action="M">Framework/Controller/Front.php</path>
    </paths>
  </logentry>
  <logentry revision="53">
    <author>hywan</author>
    <date>2009-01-11T15:55:11.751141Z</date>
    <msg>Rewrite Class and Interface token.</msg>
    <paths>
      <path action="M">Framework/Tokenizer/Token/Class.php</path>
      <path action="M">Framework/Tokenizer/Token/Class/Access.php</path>
      <path action="M">Framework/Tokenizer/Token/Class/Attribute.php</path>
      <path action="M">Framework/Tokenizer/Token/Class/Constant.php</path>
      <path action="M">Framework/Tokenizer/Token/Class/Method.php</path>
      <path action="M">Framework/Tokenizer/Token/Interface.php</path>
    </paths>
  </logentry>
  <logentry revision="52">
    <author>hywan</author>
    <date>2009-01-11T15:54:37.084822Z</date>
    <msg>Correct a typo in getName() API documentation method.</msg>
    <paths>
      <path action="M">Framework/Tokenizer/Token/Variable.php</path>
    </paths>
  </logentry>
  <logentry revision="51">
    <author>hywan</author>
    <date>2009-01-11T15:53:58.874742Z</date>
    <msg>Add hasBody() method.</msg>
    <paths>
      <path action="M">Framework/Tokenizer/Token/Function.php</path>
    </paths>
  </logentry>
  <logentry revision="50">
    <author>hywan</author>
    <date>2009-01-11T15:53:27.447202Z</date>
    <msg>Add @throw tag in setDefaultValue() method API documentation, and correct a typo in an exception message.</msg>
    <paths>
      <path action="M">Framework/Tokenizer/Token/Function/Argument.php</path>
    </paths>
  </logentry>
  <logentry revision="49">
    <author>hywan</author>
    <date>2009-01-11T13:47:14.561482Z</date>
    <msg>An operation is also constitued of call and string.</msg>
    <paths>
      <path action="M">Framework/Tokenizer/Token/Operation.php</path>
    </paths>
  </logentry>
  <logentry revision="48">
    <author>hywan</author>
    <date>2009-01-11T13:45:51.946756Z</date>
    <msg>An encapsed string is an operation. See Operation.php</msg>
    <paths>
      <path action="D">Framework/Tokenizer/Token/String/Encapsed.php</path>
    </paths>
  </logentry>
  <logentry revision="47">
    <author>hywan</author>
    <date>2009-01-11T13:37:10.577141Z</date>
    <msg>Add precedence of operators.</msg>
    <paths>
      <path action="M">Framework/Tokenizer/Token/Operator.php</path>
      <path action="M">Framework/Tokenizer/Token/Operator/Arithmetical.php</path>
      <path action="M">Framework/Tokenizer/Token/Operator/Assignement.php</path>
      <path action="M">Framework/Tokenizer/Token/Operator/Bitwise.php</path>
      <path action="M">Framework/Tokenizer/Token/Operator/Comparison.php</path>
      <path action="M">Framework/Tokenizer/Token/Operator/ErrorControl.php</path>
      <path action="M">Framework/Tokenizer/Token/Operator/Execution.php</path>
      <path action="M">Framework/Tokenizer/Token/Operator/InDeCrementing.php</path>
      <path action="M">Framework/Tokenizer/Token/Operator/Logical.php</path>
      <path action="A">Framework/Tokenizer/Token/Operator/String.php</path>
      <path action="M">Framework/Tokenizer/Token/Operator/Type.php</path>
    </paths>
  </logentry>
  <logentry revision="46">
    <author>hywan</author>
    <date>2009-01-11T13:36:57.524591Z</date>
    <msg>Forget a cast (integer is like int).</msg>
    <paths>
      <path action="M">Framework/Tokenizer/Token/Cast.php</path>
    </paths>
  </logentry>
  <logentry revision="44">
    <author>hywan</author>
    <date>2009-01-10T22:33:26.552329Z</date>
    <msg>Mania : formatting space.</msg>
    <paths>
      <path action="M">Framework/Cache/Backend/Abstract.php</path>
      <path action="M">Framework/Cache/Cache.php</path>
    </paths>
  </logentry>
  <logentry revision="42">
    <author>hywan</author>
    <date>2009-01-10T14:26:47.078742Z</date>
    <msg>Write the whitespace token.</msg>
    <paths>
      <path action="M">Framework/Tokenizer/Token/Whitespace.php</path>
    </paths>
  </logentry>
  <logentry revision="40">
    <author>hywan</author>
    <date>2009-01-09T20:58:36.247393Z</date>
    <msg>Change tokens : AT -&amp;gt; AT_SIGN and EXCLAMATION_MARK -&amp;gt; LOGICAL_NOT, and add tokens BITWISE_*, IS_GREATER and IS_SMALLER.</msg>
    <paths>
      <path action="M">Framework/Tokenizer/Tokenizer.php</path>
    </paths>
  </logentry>
  <logentry revision="39">
    <author>hywan</author>
    <date>2009-01-09T20:53:45.820730Z</date>
    <msg>Finally solved the problem with operators/operations.</msg>
    <paths>
      <path action="A">Framework/Tokenizer/Token/Operation.php</path>
      <path action="M">Framework/Tokenizer/Token/Operator.php</path>
      <path action="A">Framework/Tokenizer/Token/Operator/Arithmetical.php</path>
      <path action="D">Framework/Tokenizer/Token/Operator/Assign.php</path>
      <path action="A">Framework/Tokenizer/Token/Operator/Assignement.php</path>
      <path action="A">Framework/Tokenizer/Token/Operator/Bitwise.php</path>
      <path action="M">Framework/Tokenizer/Token/Operator/Comparison.php</path>
      <path action="A">Framework/Tokenizer/Token/Operator/ErrorControl.php</path>
      <path action="A">Framework/Tokenizer/Token/Operator/Execution.php</path>
      <path action="A">Framework/Tokenizer/Token/Operator/InDeCrementing.php</path>
      <path action="D">Framework/Tokenizer/Token/Operator/Logic.php</path>
      <path action="A">Framework/Tokenizer/Token/Operator/Logical.php</path>
      <path action="A">Framework/Tokenizer/Token/Operator/Type.php</path>
    </paths>
  </logentry>
  <logentry revision="38">
    <author>hywan</author>
    <date>2009-01-09T20:46:23.580282Z</date>
    <msg>Huh, a constant with a sequenced value ? Not in this class, delete all.</msg>
    <paths>
      <path action="M">Framework/Tokenizer/Token/String/Constant.php</path>
    </paths>
  </logentry>
  <logentry revision="37">
    <author>hywan</author>
    <date>2009-01-09T20:45:10.526406Z</date>
    <msg>Write the exception class (“throw” token).</msg>
    <paths>
      <path action="M">Framework/Tokenizer/Token/Exception.php</path>
    </paths>
  </logentry>
  <logentry revision="36">
    <author>hywan</author>
    <date>2009-01-09T20:43:32.578322Z</date>
    <msg>Oops, forget these ones …</msg>
    <paths>
      <path action="M">Framework/Tokenizer/Token/Function.php</path>
      <path action="M">Framework/Tokenizer/Token/Interface.php</path>
      <path action="M">Framework/Tokenizer/Token/Number/DNumber.php</path>
      <path action="M">Framework/Tokenizer/Token/Number/LNumber.php</path>
      <path action="M">Framework/Tokenizer/Token/Variable/Valued.php</path>
    </paths>
  </logentry>
  <logentry revision="35">
    <author>hywan</author>
    <date>2009-01-09T20:34:08.269909Z</date>
    <msg>Implement new interfaces, write methods, edit etc.</msg>
    <paths>
      <path action="M">Framework/Tokenizer/Token/Array.php</path>
      <path action="M">Framework/Tokenizer/Token/Call.php</path>
      <path action="M">Framework/Tokenizer/Token/Call/Attribute.php</path>
      <path action="M">Framework/Tokenizer/Token/Call/ClassConstant.php</path>
      <path action="M">Framework/Tokenizer/Token/Call/Function.php</path>
      <path action="M">Framework/Tokenizer/Token/Call/Method.php</path>
      <path action="M">Framework/Tokenizer/Token/Call/StaticAttribute.php</path>
      <path action="M">Framework/Tokenizer/Token/Call/StaticMethod.php</path>
      <path action="M">Framework/Tokenizer/Token/Cast.php</path>
      <path action="M">Framework/Tokenizer/Token/Class.php</path>
      <path action="M">Framework/Tokenizer/Token/Class/Access.php</path>
      <path action="M">Framework/Tokenizer/Token/Class/Attribute.php</path>
      <path action="M">Framework/Tokenizer/Token/Class/Constant.php</path>
      <path action="M">Framework/Tokenizer/Token/Clone.php</path>
      <path action="M">Framework/Tokenizer/Token/Comment.php</path>
      <path action="M">Framework/Tokenizer/Token/Function/Argument.php</path>
      <path action="M">Framework/Tokenizer/Token/Function/Named.php</path>
      <path action="M">Framework/Tokenizer/Token/New.php</path>
      <path action="M">Framework/Tokenizer/Token/Number.php</path>
      <path action="M">Framework/Tokenizer/Token/OutterPhp.php</path>
      <path action="M">Framework/Tokenizer/Token/String.php</path>
      <path action="M">Framework/Tokenizer/Token/String/Encapsed.php</path>
      <path action="M">Framework/Tokenizer/Token/String/EncapsedConstant.php</path>
      <path action="M">Framework/Tokenizer/Token/Variable.php</path>
      <path action="M">Framework/Tokenizer/Token/Whitespace.php</path>
    </paths>
  </logentry>
  <logentry revision="34">
    <author>hywan</author>
    <date>2009-01-09T20:23:15.260261Z</date>
    <msg>Add the scalar and super-scalar notions. Change the previous interface for Tokenizable interface. Finally add the type notion.</msg>
    <paths>
      <path action="A">Framework/Tokenizer/Token/Util/Interface</path>
      <path action="D">Framework/Tokenizer/Token/Util/Interface.php</path>
      <path action="A">Framework/Tokenizer/Token/Util/Interface/Scalar.php</path>
      <path action="A">Framework/Tokenizer/Token/Util/Interface/SuperScalar.php</path>
      <path action="A">Framework/Tokenizer/Token/Util/Interface/Tokenizable.php</path>
      <path action="A">Framework/Tokenizer/Token/Util/Interface/Type.php</path>
    </paths>
  </logentry>
  <logentry revision="33">
    <author>hywan</author>
    <date>2009-01-09T12:00:00.398741Z</date>
    <msg>Change constant _AROBASE to _AT and correct constant's value of _MUL (was “+”).</msg>
    <paths>
      <path action="M">Framework/Tokenizer/Tokenizer.php</path>
    </paths>
  </logentry>
  <logentry revision="29">
    <author>hywan</author>
    <date>2009-01-08T20:20:02.394922Z</date>
    <msg>Remove parenthesis of a require's call.</msg>
    <paths>
      <path action="M">Framework/Framework.php</path>
    </paths>
  </logentry>
  <logentry revision="27">
    <author>hywan</author>
    <date>2009-01-05T23:38:32.596523Z</date>
    <msg>Correct stranges characters in the API documentation …</msg>
    <paths>
      <path action="M">Framework/Tokenizer/Token/Number.php</path>
    </paths>
  </logentry>
  <logentry revision="26">
    <author>hywan</author>
    <date>2009-01-05T23:36:42.937903Z</date>
    <msg>Edit what is a correct type in an array key.</msg>
    <paths>
      <path action="M">Framework/Tokenizer/Token/Array.php</path>
    </paths>
  </logentry>
  <logentry revision="25">
    <author>hywan</author>
    <date>2009-01-05T23:35:14.901204Z</date>
    <msg>Mania : missing spaces.</msg>
    <paths>
      <path action="M">Framework/Locale/Locale.php</path>
    </paths>
  </logentry>
  <logentry revision="24">
    <author>hywan</author>
    <date>2009-01-05T23:34:29.428132Z</date>
    <msg>Edit the API documentation, and return true when a model is autoloaded in autoloadModel() method.</msg>
    <paths>
      <path action="M">Framework/Controller/Action/Standard.php</path>
    </paths>
  </logentry>
  <logentry revision="21">
    <author>hywan</author>
    <date>2009-01-04T17:43:53.954021Z</date>
    <msg>Mania : missing spaces.</msg>
    <paths>
      <path action="M">Framework/Controller/Plugin/Interface.php</path>
    </paths>
  </logentry>
  <logentry revision="20">
    <author>hywan</author>
    <date>2009-01-03T21:06:29.839513Z</date>
    <msg>Change class documentation (bad copy/past ;-)).</msg>
    <paths>
      <path action="M">Framework/Tokenizer/Token/Cast.php</path>
    </paths>
  </logentry>
  <logentry revision="19">
    <author>hywan</author>
    <date>2009-01-02T18:18:55.673750Z</date>
    <msg>Write the whitespace structure (it's a pretext for testing SVN hooks).</msg>
    <paths>
      <path action="M">Framework/Tokenizer/Token/Whitespace.php</path>
    </paths>
  </logentry>
  <logentry revision="18">
    <author>hywan</author>
    <date>2009-01-02T00:41:41.885730Z</date>
    <msg>Continue the tokenizer … now, on the right way.</msg>
    <paths>
      <path action="M">Framework/Tokenizer/Parser.php</path>
      <path action="M">Framework/Tokenizer/Token/Array.php</path>
      <path action="A">Framework/Tokenizer/Token/Call</path>
      <path action="A">Framework/Tokenizer/Token/Call.php</path>
      <path action="A">Framework/Tokenizer/Token/Call/Attribute.php</path>
      <path action="A">Framework/Tokenizer/Token/Call/ClassConstant.php</path>
      <path action="A">Framework/Tokenizer/Token/Call/Function.php</path>
      <path action="A">Framework/Tokenizer/Token/Call/Method.php</path>
      <path action="A">Framework/Tokenizer/Token/Call/StaticAttribute.php</path>
      <path action="A">Framework/Tokenizer/Token/Call/StaticMethod.php</path>
      <path action="M">Framework/Tokenizer/Token/Cast.php</path>
      <path action="M">Framework/Tokenizer/Token/Class/Constant.php</path>
      <path action="M">Framework/Tokenizer/Token/Class/Method.php</path>
      <path action="A">Framework/Tokenizer/Token/Clone.php</path>
      <path action="A">Framework/Tokenizer/Token/ControlStructure</path>
      <path action="A">Framework/Tokenizer/Token/Function</path>
      <path action="M">Framework/Tokenizer/Token/Function.php</path>
      <path action="A">Framework/Tokenizer/Token/Function/Anonymous.php</path>
      <path action="A">Framework/Tokenizer/Token/Function/Argument.php</path>
      <path action="A">Framework/Tokenizer/Token/Function/Named.php</path>
      <path action="A">Framework/Tokenizer/Token/New.php</path>
      <path action="M">Framework/Tokenizer/Token/OutterPhp.php</path>
      <path action="M">Framework/Tokenizer/Token/String.php</path>
      <path action="M">Framework/Tokenizer/Token/String/Boolean.php</path>
      <path action="A">Framework/Tokenizer/Token/String/Constant.php</path>
      <path action="A">Framework/Tokenizer/Token/String/Encapsed.php</path>
      <path action="A">Framework/Tokenizer/Token/String/EncapsedConstant.php</path>
      <path action="M">Framework/Tokenizer/Token/String/Null.php</path>
      <path action="A">Framework/Tokenizer/Token/Variable</path>
      <path action="M">Framework/Tokenizer/Token/Variable.php</path>
      <path action="A">Framework/Tokenizer/Token/Variable/Valued.php</path>
      <path action="M">Framework/Tokenizer/Tokenizer.php</path>
    </paths>
  </logentry>
  <logentry revision="17">
    <author>hywan</author>
    <date>2008-12-23T23:23:33.200610Z</date>
    <msg>Bad place for Null and Boolean.</msg>
    <paths>
      <path action="D">Framework/Tokenizer/Token/Boolean.php</path>
      <path action="D">Framework/Tokenizer/Token/Null.php</path>
      <path action="A">Framework/Tokenizer/Token/String/Boolean.php</path>
      <path action="A">Framework/Tokenizer/Token/String/Null.php</path>
    </paths>
  </logentry>
  <logentry revision="16">
    <author>hywan</author>
    <date>2008-12-23T23:23:04.188505Z</date>
    <msg>Bad place for Null and Boolean.</msg>
    <paths>
      <path action="M">Framework/Tokenizer/Token/Boolean.php</path>
      <path action="M">Framework/Tokenizer/Token/Null.php</path>
      <path action="A">Framework/Tokenizer/Token/String</path>
    </paths>
  </logentry>
  <logentry revision="15">
    <author>hywan</author>
    <date>2008-12-23T18:50:07.434452Z</date>
    <msg>Continuing the tokenizer.</msg>
    <paths>
      <path action="M">Framework/Controller/Front.php</path>
      <path action="M">Framework/Tokenizer/Parser.php</path>
      <path action="M">Framework/Tokenizer/Token/Array.php</path>
      <path action="A">Framework/Tokenizer/Token/Boolean.php</path>
      <path action="M">Framework/Tokenizer/Token/Class.php</path>
      <path action="A">Framework/Tokenizer/Token/Class/Access.php</path>
      <path action="M">Framework/Tokenizer/Token/Class/Attribute.php</path>
      <path action="M">Framework/Tokenizer/Token/Class/Constant.php</path>
      <path action="M">Framework/Tokenizer/Token/Comment.php</path>
      <path action="M">Framework/Tokenizer/Token/Interface.php</path>
      <path action="D">Framework/Tokenizer/Token/LNumber.php</path>
      <path action="A">Framework/Tokenizer/Token/Null.php</path>
      <path action="A">Framework/Tokenizer/Token/Number</path>
      <path action="M">Framework/Tokenizer/Token/Number.php</path>
      <path action="A">Framework/Tokenizer/Token/Number/DNumber.php</path>
      <path action="A">Framework/Tokenizer/Token/Number/LNumber.php</path>
      <path action="A">Framework/Tokenizer/Token/Operator</path>
      <path action="M">Framework/Tokenizer/Token/Operator.php</path>
      <path action="A">Framework/Tokenizer/Token/Operator/Assign.php</path>
      <path action="A">Framework/Tokenizer/Token/Operator/Comparison.php</path>
      <path action="A">Framework/Tokenizer/Token/Operator/Logic.php</path>
      <path action="M">Framework/Tokenizer/Token/String.php</path>
      <path action="M">Framework/Tokenizer/Token/Util/Interface.php</path>
      <path action="M">Framework/Tokenizer/Tokenizer.php</path>
      <path action="M">Framework/Version/Version.php</path>
    </paths>
  </logentry>
  <logentry revision="14">
    <author>hywan</author>
    <date>2008-12-23T00:56:39.555443Z</date>
    <msg>First step. Try to group token types for a better manipulation of the code.</msg>
    <paths>
      <path action="A">Framework/Tokenizer/Token</path>
      <path action="A">Framework/Tokenizer/Token/Array.php</path>
      <path action="A">Framework/Tokenizer/Token/Cast.php</path>
      <path action="A">Framework/Tokenizer/Token/Class</path>
      <path action="A">Framework/Tokenizer/Token/Class.php</path>
      <path action="A">Framework/Tokenizer/Token/Class/Attribute.php</path>
      <path action="A">Framework/Tokenizer/Token/Class/Constant.php</path>
      <path action="A">Framework/Tokenizer/Token/Class/Method.php</path>
      <path action="A">Framework/Tokenizer/Token/Comment.php</path>
      <path action="A">Framework/Tokenizer/Token/ControlStructure.php</path>
      <path action="A">Framework/Tokenizer/Token/Exception.php</path>
      <path action="A">Framework/Tokenizer/Token/Function.php</path>
      <path action="A">Framework/Tokenizer/Token/Interface.php</path>
      <path action="A">Framework/Tokenizer/Token/LNumber.php</path>
      <path action="A">Framework/Tokenizer/Token/Number.php</path>
      <path action="A">Framework/Tokenizer/Token/Operator.php</path>
      <path action="A">Framework/Tokenizer/Token/OutterPhp.php</path>
      <path action="A">Framework/Tokenizer/Token/String.php</path>
      <path action="A">Framework/Tokenizer/Token/Util</path>
      <path action="A">Framework/Tokenizer/Token/Util/Exception.php</path>
      <path action="A">Framework/Tokenizer/Token/Util/Interface.php</path>
      <path action="A">Framework/Tokenizer/Token/Variable.php</path>
      <path action="A">Framework/Tokenizer/Token/Whitespace.php</path>
    </paths>
  </logentry>
  <logentry revision="13">
    <author>hywan</author>
    <date>2008-12-22T12:56:16.799331Z</date>
    <msg>Useless here, adopt a new methodology.</msg>
    <paths>
      <path action="D">Framework/Tokenizer/PreProcessor</path>
    </paths>
  </logentry>
  <logentry revision="11">
    <author>hywan</author>
    <date>2008-12-21T19:24:06.287219Z</date>
    <msg>Start the Tokenizer package. The minimal structure is present.</msg>
    <paths>
      <path action="A">Framework/Tokenizer</path>
      <path action="A">Framework/Tokenizer/Builder.php</path>
      <path action="A">Framework/Tokenizer/Exception.php</path>
      <path action="A">Framework/Tokenizer/Parser.php</path>
      <path action="A">Framework/Tokenizer/Plugin</path>
      <path action="A">Framework/Tokenizer/Plugin/Exception.php</path>
      <path action="A">Framework/Tokenizer/Plugin/Interface.php</path>
      <path action="A">Framework/Tokenizer/PreProcessor</path>
      <path action="A">Framework/Tokenizer/PreProcessor/Exception.php</path>
      <path action="A">Framework/Tokenizer/Style</path>
      <path action="A">Framework/Tokenizer/Style/Exception.php</path>
      <path action="A">Framework/Tokenizer/Style/Interface.php</path>
      <path action="A">Framework/Tokenizer/Style/Null.php</path>
      <path action="A">Framework/Tokenizer/Tokenizer.php</path>
    </paths>
  </logentry>
  <logentry revision="10">
    <author>hywan</author>
    <date>2008-12-21T18:53:31.574349Z</date>
    <msg>Mania is back …</msg>
    <paths>
      <path action="M">Framework/Framework.php</path>
    </paths>
  </logentry>
  <logentry revision="9">
    <author>hywan</author>
    <date>2008-12-21T16:59:12.097746Z</date>
    <msg>Add the “void” constant.</msg>
    <paths>
      <path action="M">Framework/Framework.php</path>
    </paths>
  </logentry>
  <logentry revision="8">
    <author>hywan</author>
    <date>2008-12-21T01:16:12.524871Z</date>
    <msg>Mania is back …</msg>
    <paths>
      <path action="M">Framework/Session/Session.php</path>
    </paths>
  </logentry>
  <logentry revision="7">
    <author>hywan</author>
    <date>2008-12-21T01:04:53.365610Z</date>
    <msg>Clean the code (yep, maia …).</msg>
    <paths>
      <path action="M">Framework/Framework.php</path>
    </paths>
  </logentry>
  <logentry revision="6">
    <author>hywan</author>
    <date>2008-12-21T01:01:37.219365Z</date>
    <msg>Dude, what's this … ?</msg>
    <paths>
      <path action="D">Framework/Archive/todo.txt</path>
    </paths>
  </logentry>
  <logentry revision="5">
    <author>hywan</author>
    <date>2008-12-20T17:47:59.416361Z</date>
    <msg>Quote a default pattern.</msg>
    <paths>
      <path action="M">Data/Configuration/Controller.yml</path>
    </paths>
  </logentry>
  <logentry revision="4">
    <author>hywan</author>
    <date>2008-12-20T17:47:03.974954Z</date>
    <msg>Ameliorate routers to build paths (very usefull for the view layer), edit the API documentation, some update of codes …</msg>
    <paths>
      <path action="M">Framework/Controller/Action/Standard.php</path>
      <path action="M">Framework/Controller/Dispatcher/Abstract.php</path>
      <path action="M">Framework/Controller/Dispatcher/Action.php</path>
      <path action="A">Framework/Controller/Exception/RouterDoesNotReturnAString.php</path>
      <path action="M">Framework/Controller/Front.php</path>
      <path action="M">Framework/Controller/Response/Standard.php</path>
      <path action="M">Framework/Controller/Router/Get.php</path>
      <path action="M">Framework/Controller/Router/Interface.php</path>
      <path action="M">Framework/Controller/Router/Rewrite.php</path>
      <path action="M">Framework/Controller/Router/Standard.php</path>
      <path action="M">Framework/View/View.php</path>
    </paths>
  </logentry>
  <logentry revision="3">
    <author>hywan</author>
    <date>2008-12-20T15:40:42.509509Z</date>
    <msg>Remake the API documentation.</msg>
    <paths>
      <path action="M">Framework/View/View.php</path>
    </paths>
  </logentry>
  <logentry revision="2">
    <author>hywan</author>
    <date>2008-12-18T18:17:16.159626Z</date>
    <msg>Forget quotes in an API example code.</msg>
    <paths>
      <path action="M">Framework/Framework.php</path>
    </paths>
  </logentry>
</log>
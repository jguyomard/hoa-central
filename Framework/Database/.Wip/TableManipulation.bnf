On indique les formes BNF des opérateurs sur les tables, puis des expresions
tabulaires (associées à SELECT et INSERT) et scalaires (associées aux colonnes
d'une clause SELECT), et enfin aux conditions de recherche (expressions de
qualification de la clause WHERE du SELECT, UPDATE et DELETE).

select ::=   SELECT [ALL|DISTINCT] sélection
           | INTO liste-cible(, )
             Expression-tabulaire

insertion ::= INSERT INTO table
              [liste-colonne(, )] source

source ::=   spécification-de-requête
           | VALUES (liste-atome-d'insertion(, ))

atome-d'insertion ::=   NULL
                      | USER
                      | paramètre

mise-à-jour-avec-recherche ::= UPDATE table
                               SET liste-assignation(, )
                               [WHERE condition-de-recherche]

suppression-avec-recherche ::= DELETE FROM table
                               [WHERE condition-de-recherche]


Spécification de requête
************************

spécification-de-requête ::= SELECT [ALL|DISTINCT]
                             sélection expression-tabulaire

sélection ::= liste-de-expression-scalaire

expression-scalaire ::=   terme
                        | expression-scalaire {+|-} terme

terme ::=   facteur
          | terme {*|/} facteur

facteur ::= [+|-] primaire

primaire ::=   atome
             | référence-colonne
             | référence-fonction
             | (expression scalaire)

atome ::=   référence-de-paramètre
          | littéral
          | USER

référence-de-paramètre ::= paramètre [INDICATOR] paramètre

référence-de-colonne ::= [nom-de-table.]colonne

référence-de-fonction ::=   COUNT(*)
                          | référence-de-fonction-DISTINCT
                          | référence-de-fonction-ALL

référence-de-fonction-DISTINCT ::= {AVG|MAX|MIN|SUM|COUNT}
                                   (référence-de-fonction-DISTINCT)

référence-de-fonction-ALL ::= {AVG|MAX|MIN|SUM}
                              ([ALL] expression-scalaire)


Expression tabulaire
********************

expression-tabulaire ::= clause-from
                         [clause-where]
                         [clause-group-by]
                         [clause-having]
			 [clause-order-by]

clause-from ::= FROM liste-de-référence-de-table(, )

référence-de-table ::= table [variable-de-parcours]

clause-where ::== WHERE condition-de-recherche

clause-group-by ::= GROUP BY liste-de-référence-de-colonne(, )

clause-order-by ::= ORDER BY ...

clause-having ::= HAVING condition-de-recherche


Condition de recherche
**********************

condition-de-recherche ::=   terme-booléen
                           | condition-de-recherche OR terme-booléen

terme-booléen ::=   facteur-booléen
                  | terme-booléen AND facteur-booléen

facteur-booléen ::= [NOT] exp-booléen

exp-booléen ::=   prédicat
                | (condition-de-recherche)

prédicat ::=   prédicat-de-comparaison
             | prédicat-BETWEEN
             | prédicat-LIKE
             | prédicat-ALL-ou-ANY
             | prédicat-d'existence

prédicat-de-comparaison ::=   expression-scalaire comparaison expression-scalaire
                            | expression-scalaire comparaison sous-requête

comparaison ::= =|<>|<|>|<=|>=

prédicat-BETWEEN ::= expression-scalaire [NOT] BETWEEN
                     expression-scalaire
                     AND expression-scalaire

prédicat-LIKE ::= référence-de-colonne [NOT] LIKE atome [ESCAPE atome]

prédicat-NULL ::= référence-de-colonne IS [NOT] NULL

prédicat-IN ::=   expression-scalaire [NOT] IN (liste-atome(, ))
                | expression-scalaire [NOT] IN sous-requête

prédicat-ALL-ou-ANY ::= expression-scalaire comparaison-quantifiée sous-requête

comparaison-quantifiée ::= {=|<>|<|>|<=|>=} {ALL|ANY|SOME}

prédicat-d'existence ::= [NOT] EXISTS sous-requête


Sous-requête
************

sous-requête ::= (SELECT [ALL|DISTINCT] sélection expression-tabulaire
